# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
jobs:
  unit-test:
    docker:
      # specify the version
      - image: circleci/golang:1.12.5
    working_directory: /go/src/github.com/MikeSofaer/pylons
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: GO111MODULE=on go test -v ./x/...
  integration-test:
    docker:
      # specify the version
      - image: circleci/golang:1.12.5
    working_directory: /go/src/github.com/MikeSofaer/pylons
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: GO111MODULE=on go install -v ./cmd/pylonsd/
      - run: GO111MODULE=on go install -v ./cmd/pylonscli/
      - run: pylonsd init --chain-id pylonschain
      - run: bash ./init-accounts.sh 
      - run: pylonscli config chain-id pylonschain
      - run: pylonscli config output json
      - run: pylonscli config indent true
      - run: pylonscli config trust-node true
      - run: pylonsd start > pylonsd.log & (sleep 5 && GO111MODULE=on go test -v ./cmd/test)

  fixture-test:
    docker:
      # specify the version
      - image: circleci/golang:1.12.5
    working_directory: /go/src/github.com/MikeSofaer/pylons
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: GO111MODULE=on go install -v ./cmd/pylonsd/
      - run: GO111MODULE=on go install -v ./cmd/pylonscli/
      - run: pylonsd init --chain-id pylonschain
      - run: bash ./init-accounts.sh
      - run: pylonscli config chain-id pylonschain
      - run: pylonscli config output json
      - run: pylonscli config indent true
      - run: pylonscli config trust-node true
      - run: pylonsd start > pylonsd.log & (sleep 5 && GO111MODULE=on go test -v ./cmd/fixtures_test)

workflows:
  version: 2
  build_and_test:
    jobs:
      - unit-test
      - integration-test
      - fixture-test

