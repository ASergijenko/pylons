{"version":3,"sources":["meteor://ðŸ’»app/imports/api/accounts/server/methods.js","meteor://ðŸ’»app/imports/api/actions/server/methods.js","meteor://ðŸ’»app/imports/api/actions/server/publications.js","meteor://ðŸ’»app/imports/api/actions/actions.js","meteor://ðŸ’»app/imports/api/analytics/server/methods.js","meteor://ðŸ’»app/imports/api/analytics/server/publications.js","meteor://ðŸ’»app/imports/api/analytics/analytics.js","meteor://ðŸ’»app/imports/api/blocks/server/methods.js","meteor://ðŸ’»app/imports/api/blocks/server/publications.js","meteor://ðŸ’»app/imports/api/blocks/blocks.js","meteor://ðŸ’»app/imports/api/chain/server/methods.js","meteor://ðŸ’»app/imports/api/chain/server/publications.js","meteor://ðŸ’»app/imports/api/chain/chain.js","meteor://ðŸ’»app/imports/api/coin-stats/server/methods.js","meteor://ðŸ’»app/imports/api/coin-stats/coin-stats.js","meteor://ðŸ’»app/imports/api/cookbooks/server/methods.js","meteor://ðŸ’»app/imports/api/cookbooks/server/publications.js","meteor://ðŸ’»app/imports/api/cookbooks/cookbooks.js","meteor://ðŸ’»app/imports/api/delegations/server/methods.js","meteor://ðŸ’»app/imports/api/delegations/delegations.js","meteor://ðŸ’»app/imports/api/fcmtoken/server/methods.js","meteor://ðŸ’»app/imports/api/fcmtoken/fcmtoken.js","meteor://ðŸ’»app/imports/api/ledger/server/methods.js","meteor://ðŸ’»app/imports/api/nfts/server/methods.js","meteor://ðŸ’»app/imports/api/nfts/server/publications.js","meteor://ðŸ’»app/imports/api/nfts/nfts.js","meteor://ðŸ’»app/imports/api/notifications/server/methods.js","meteor://ðŸ’»app/imports/api/notifications/notifications.js","meteor://ðŸ’»app/imports/api/proposals/server/methods.js","meteor://ðŸ’»app/imports/api/proposals/server/publications.js","meteor://ðŸ’»app/imports/api/proposals/proposals.js","meteor://ðŸ’»app/imports/api/recipes/server/methods.js","meteor://ðŸ’»app/imports/api/recipes/server/publications.js","meteor://ðŸ’»app/imports/api/recipes/recipes.js","meteor://ðŸ’»app/imports/api/records/server/methods.js","meteor://ðŸ’»app/imports/api/records/server/publications.js","meteor://ðŸ’»app/imports/api/records/records.js","meteor://ðŸ’»app/imports/api/status/server/publications.js","meteor://ðŸ’»app/imports/api/status/status.js","meteor://ðŸ’»app/imports/api/transactions/server/methods.js","meteor://ðŸ’»app/imports/api/transactions/server/publications.js","meteor://ðŸ’»app/imports/api/transactions/transactions.js","meteor://ðŸ’»app/imports/api/validators/server/methods.js","meteor://ðŸ’»app/imports/api/validators/server/publications.js","meteor://ðŸ’»app/imports/api/validators/validators.js","meteor://ðŸ’»app/imports/api/voting-power/history.js","meteor://ðŸ’»app/imports/api/evidences/evidences.js","meteor://ðŸ’»app/imports/api/validator-sets/validator-sets.js","meteor://ðŸ’»app/imports/api/admin.js","meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/server/create-indexes.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/server/util.js","meteor://ðŸ’»app/both/utils/coins.js","meteor://ðŸ’»app/both/utils/loader.js","meteor://ðŸ’»app/both/utils/time.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","link","v","HTTP","Validators","sanitizeUrl","fetchFromUrl","url","API","res","get","statusCode","e","console","log","methods","address","unblock","available","response","JSON","parse","content","result","account","type","value","BaseVestingAccount","BaseAccount","balances","coins","account_number","balance","delegations","delegation_responses","unbonding","unbonding_responses","rewards","total_rewards","total","validator","findOne","$or","operator_address","delegator_address","operatorAddress","commission","length","data","delegation_response","delegation","shares","parseFloat","relegations","redelegation_responses","completionTime","forEach","relegation","entries","time","Date","completion_time","redelegationCompletionTime","undelegations","unbondingCompletionTime","i","unbondings","redelegations","redelegation","validator_dst_address","count","userRedelegations","Actions","Api","Restivus","useDefaultAuth","prettyJson","StatusOk","StatusInvalidInput","Success","BadRequest","ApiServerOkMessage","ActionTypeLike","ActionTypeView","addRoute","authRequired","Code","Message","Data","Valid","urlParams","cookbookId","recipeId","GetViews","totalViews","post","bodyParams","userId","ViewNFT","GetLikes","totalLikes","ToggleLike","GetLikeStatus","likes","views","action","actionType","from","liked","insert","remove","_id","newLikes","upsert","$set","viewed","find","likeStatus","parameter","publish","sort","ID","id","export","Mongo","Collection","Analytics","Recipes","Transactions","Notifications","isNil","SalesAnalyticsDenom","isServer","txns","$ne","fetch","recipeID","tx","body","messages","recipe_id","cookBookId","cookbook_id","recipe","getRecipe","nftName","getNftName","nftUrl","getNftProperty","nftFormat","amountString","getAmountString","amountVal","getAmount","coinDenom","getCoin","receiver","getReceiver","spender","getSpender","sale","txhash","item_name","item_img","item_format","amount","coin","to","tx_response","timestamp","settled","read","Math","floor","created_at","updated_at","limitVal","offsetVal","recordsList","limit","skip","getUserNameInfo","username","counts","records","coinInvolved","coin_inputs","creator","listing","itemImg","itemName","itemFormat","denom","R","listings","creatorUsername","mongoListing","rawCollection","creatorOfAllTime","aggregate","$match","$group","$sum","$sort","$limit","toArray","undefined","start","setHours","startDate","getFormattedDate","end","setDate","getDate","endDate","creatorOfTheDay","$gte","$lt","sales","buyerUsername","sellerUsername","extractSaleFromSales","graphData","push","date","monthString","getMonth","dateString","formattedDate","getFullYear","property","itemOutputs","item_outputs","properties","strings","key","name","settings","remote","api","txn","getAttributeFromEvent","event","attribute","Val","events","logs","attributes","j","quantity","replace","cookBookID","publishComposite","Blockscon","helpers","block","height","getValidatorProfileUrl","Chain","ValidatorSets","ValidatorRecords","VPDistributions","VotingPowerHistory","Evidences","sha256","cheerio","getRemovedValidators","prevValidators","validators","p","splice","getValidatorFromConsensusKey","consensusKey","pubkeyType","public","secp256k1","pubkey","call","pub_key","identity","them","pictures","primary","stringify","indexOf","teamPage","page","load","attr","getValidatorUptime","validatorSet","slashingParams","chainId","bech32ValConsAddress","signingInfo","val_signing_info","valData","tombstoned","jailed_until","index_offset","parseInt","start_height","uptime","params","signed_blocks_window","missed_blocks_counter","calculateVPDist","analyticsData","blockData","activeValidators","status","jailed","voting_power","numTopTwenty","ceil","numBottomEighty","topTwentyPower","bottomEightyPower","numTopThirtyFour","numBottomSixtySix","topThirtyFourPercent","bottomSixtySixPercent","vpDist","numValidators","totalVotingPower","blockTime","createAt","blocks","proposerAddress","heights","map","blocksStats","$in","totalBlockDiff","b","timeDiff","RPC","sync_info","latest_block_height","currHeight","startHeight","SYNCING","until","curr","consensus_pubkey","totalValidators","Object","keys","update","startBlockTime","bulkValidators","initializeUnorderedBulkOp","bulkUpdateLastSeen","bulkValidatorRecords","bulkVPHistory","bulkTransactions","startGetHeightTime","hash","block_id","transNum","txs","header","lastBlockHash","last_block_id","proposer_address","t","Buffer","toUpperCase","processed","execute","err","evidence","evidenceList","precommitsCount","last_commit","signatures","endGetHeightTime","startGetValidatorsTime","genesisTime","genesisResult","genesis","genesis_time","block_height","validatorsCount","tempValidators","valconsAddress","bech32PrefixConsAddr","precommits","validator_address","record","exists","precommitAddress","updateOne","lastSeen","startBlockInsertTime","endBlockInsertTime","chainStatus","chain_id","lastSyncedTime","defaultBlockTime","dateLatest","dateLast","genesisTimeStamp","abs","getTime","endGetValidatorsTime","averageBlockTime","startFindValidatorsNameTime","tokens","unbonding_height","valExist","bech32ConsensusPubKey","bech32PrefixConsPub","description","profile_url","error","accpub","bech32PrefixAccPub","operator_pubkey","bech32PrefixValPub","proposer_priority","prev_voting_power","block_time","prevVotingPower","changeType","changeData","validatorUpdateWindow","selfDelegation","self_delegation","delegator_shares","endFindValidatorsNameTime","startAnayticsInsertTime","endAnalyticsInsertTime","startVUpTime","endVUpTime","startVRTime","endVRTime","endBlockTime","lastBlocksSyncedTime","children","proposer","ChainStates","Coin","default","findVotingPower","genValidators","power","consensus","round_state","round","step","votedPower","votes","prevotes_bit_array","split","votingHeight","votingRound","votingStep","prevotes","latestBlock","chain","latestBlockHeight","latestBlockTime","latestState","activeVP","activeVotingPower","staking","chainStates","bonding","pool","bondedTokens","bonded_tokens","notBondedTokens","not_bonded_tokens","StakingCoin","modules","bank","supply","totalSupply","distribution","communityPool","minting","inflation","provisions","annual_provisions","annualProvisions","mint","gov","created","CoinStats","last_updated_at","fields","string","transactionsHandle","transactions","transactionsExist","loading","coinId","coingeckoId","now","setMinutes","isClient","subscribe","props","delegator","ready","items","Strings","price","currency","Key","Value","Cookbooks","cookbooks","finishedCookbookIds","Set","activeCookbooks","cookbookIds","bulkCookbooks","cookbook","NO","has","getDay","getHours","getMinutes","getSeconds","getMilliseconds","$nin","Level","check","cookbook_owner","Sender","Delegations","concat","createdAt","WebApp","FCMToken","admin","connectRoute","isString","Failed","AppCheckFailed","connectHandlers","use","router","req","token","writeHead","h","headers","appCheckClaims","verifyAppCheckToken","updateFCMToken","userAddress","fcmToken","appCheckToken","appCheck","verifyToken","_objectSpread","txInfo","code","Error","raw_log","message","path","txMsg","accountNumber","sequence","adjustment","toString","gas_estimate","Nfts","trades","finishedNftIds","nftIds","bulkNfts","trade","itemID","cookbookID","executions","item","CompletedExecutions","tradeable","resalelink","baseURL","nft","nfts","isNumber","InvalidID","offset","getNotifications","results","notificationIDs","index","markRead","unSettled","sellerAddress","saleID","buyerUserName","notification","title","options","priority","timeToLive","sendNotifications","messaging","sendToDevice","then","n","markSent","catch","Proposals","tally_params","proposals","finishedProposalIds","proposalId","activeProposals","proposalIds","bulkProposals","proposal","proposal_id","deposits","getVoteDetail","tally","updatedAt","voters","vote","voter","votingPowerMap","validatorAddressMap","moniker","delegatorShares","deductedShares","votingPower","Number","recipes","finishedRecipeIds","enabled","recipeIds","bulkRecipes","deeplink","AverageData","AverageValidatorData","Status","MissedBlocksStats","MissedBlocks","_","BULKUPDATEMAXSIZE","getBlockStats","latestHeight","blockStats","cond","$and","$gt","$lte","assign","getPreviousRecord","voterAddress","previousRecord","blockHeight","lastUpdatedHeight","prevStats","pick","missCount","totalCount","COUNTMISSEDBLOCKS","startTime","explorerStatus","lastProcessedMissedBlockHeight","min","bulkMissedStats","initializeOrderedBulkOp","validatorsMap","proposerVoterStats","votedValidators","validatorSets","votedVotingPower","activeValidator","currentValidator","set","stats","client","_driver","mongo","bulkPromise","bindEnvironment","nInserted","nUpserted","nModified","Promise","await","lastProcessedMissedBlockTime","COUNTMISSEDBLOCKSSTATS","lastMissedBlockHeight","missedRecords","existingRecord","lastMissedBlockTime","averageVotingPower","analytics","lastMinuteVotingPower","lastMinuteBlockTime","lastHourVotingPower","lastHourBlockTime","lastDayVotingPower","lastDayBlockTime","blockHeights","a","num","conditions","proposerMoniker","voterMoniker","AddressLength","TXSYNCING","missing","includes","bech32PrefixValAddr","bech32PrefixAccAddr","$exists","needTransactions","validatorAddress","delegatorAddress","query","delegationsCount","pagination","node_info","network","lastKeybaseFetchTime","profileUrl","toUTCString","direction","val","uptimeWindow","firstSeen","history","require","serviceAccount","process","env","FIREBASE_CONFIG","initializeApp","credential","cert","exports","createIndex","unique","partialFilterExpression","queryString","onPageLoad","Helmet","IMAGE_WIDTH","IMAGE_HEIGHT","siteName","picWidth","picHeight","defaultImage","defaultMetaTags","BROWSER_BOT","SLACK_BOT","FACEBOOK_BOT","TWITTER_BOT","INSTAGRAM_BOT","DISCORD_BOT","botType","getRecipeData","selectedRecipe","startup","sink","request","search","appendToHead","querys","URLSearchParams","img","recipesUrl","priceValue","priceCurrency","longs","weightRanges","lower","substring","toLowerCase","fraction","displayName","browser","itemoutputs","Longs","weight","values","MetaTags","absoluteUrl","Recipe","bech32","tmhash","hexToBech32","prefix","addressBuffer","encode","toWords","pubkeyToBech32Old","buffer","pubkeyAminoPrefix","alloc","copy","pubkeyToBech32","bech32ToPubkey","fromWords","decode","words","slice","getAddressFromPubkey","bytes","getDelegator","operatorAddr","getKeybaseTeamPic","keybaseUrl","getVersion","version","Assets","getText","numbro","autoformat","formatter","format","coinList","constructor","bondDenom","lowerDenom","_coin","_amount","stakingAmount","precision","minStake","repeat","MinStake","React","DisappearedLoading","Loader","exportDefault","goTimeToISOString","millisecond","seconds","nanos","toISOString","rpc","timerBlocks","timerTransactions","timerChain","timerConsensus","timerProposal","timerProposalsResults","timerRecipe","timerRecipesResults","timerCookbook","timerCookbooksResults","timerMissedBlock","timerDelegation","timerAggregate","timerFetchKeybase","timersendnunsettledotifications","DEFAULTSETTINGS","updateChainStatus","updateBlock","updateTransactions","upsertSales","upsertListings","getConsensusState","getRecipes","getRecipesResults","getNfts","getNftsResults","getCookbooks","getCookbooksResults","getProposals","getProposalsResults","updateMissedBlocks","fetchKeybase","getDelegations","sendUnsettledNotifications","aggregateMinutely","aggregateHourly","aggregateDaily","isDevelopment","DEFAULTSETTINGSJSON","NODE_TLS_REJECT_UNAUTHORIZED","warn","param","debug","startTimer","setInterval","collectNotificationsInterval","consensusInterval","blockInterval","transactionsInterval","statusInterval","proposalInterval","recipeInterval","timerNft","nftInterval","cookbookInterval","missedBlocksInterval","keybaseFetchingInterval","getUTCSeconds","getUTCMinutes","getUTCHours"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Validators } from '/imports/api/validators/validators.js';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\nconst fetchFromUrl = (url) => {\n    try {\n        var url = sanitizeUrl(API + url)\n        let res = HTTP.get(url);\n        if (res.statusCode == 200) {\n            return res\n        };\n    } catch (e) {\n        console.log(url);\n        console.log(e);\n    }\n}\n\nMeteor.methods({\n    'accounts.getAccountDetail': function(address) {\n        this.unblock(); \n        let url = sanitizeUrl(API + '/auth/accounts/' + address);\n        \n        try {\n            let available = HTTP.get(url);\n            if (available.statusCode == 200) {\n                // return JSON.parse(available.content).account\n                let response = JSON.parse(available.content).result;\n                let account;\n                if ((response.type === 'cosmos-sdk/Account') || (response.type === 'cosmos-sdk/BaseAccount'))\n                    account = response.value;\n                else if (response.type === 'cosmos-sdk/DelayedVestingAccount' || response.type === 'cosmos-sdk/ContinuousVestingAccount')\n                    account = response.value.BaseVestingAccount.BaseAccount\n\n                try {\n                    url = sanitizeUrl(API + '/bank/balances/' + address);\n                    response = HTTP.get(url);\n                    let balances = JSON.parse(response.content).result;\n                    account.coins = balances;\n\n                    if (account && account.account_number != null)\n                        return account\n                    return null\n                } catch (e) {\n                    return null;\n                }\n            }\n        } catch (e) {\n            console.log(url);\n            console.log(e)\n        }\n    },\n    'accounts.getBalance': function(address) {\n        this.unblock();\n        let balance = {}\n\n        // get available atoms\n        let url = sanitizeUrl(API + '/cosmos/bank/v1beta1/balances/' + address);\n        try {\n            let available = HTTP.get(url);\n            if (available.statusCode == 200) {\n                balance.available = JSON.parse(available.content).balances;\n\n            }\n        } catch (e) {\n            console.log(url);\n            console.log(e)\n        }\n\n        // get delegated amnounts\n        url = sanitizeUrl(API + '/cosmos/staking/v1beta1/delegations/' + address);\n        try {\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200) {\n                balance.delegations = JSON.parse(delegations.content).delegation_responses;\n            }\n        } catch (e) {\n            console.log(url);\n            console.log(e);\n        }\n        // get unbonding\n        url = API + sanitizeUrl('/cosmos/staking/v1beta1/delegators/' + address + '/unbonding_delegations');\n        try {\n            let unbonding = HTTP.get(url);\n            if (unbonding.statusCode == 200) {\n                balance.unbonding = JSON.parse(unbonding.content).unbonding_responses;\n            }\n        } catch (e) {\n            console.log(url);\n            console.log(e);\n        }\n\n        // get rewards\n        url = sanitizeUrl(API + '/cosmos/distribution/v1beta1/delegators/' + address + '/rewards');\n        try {\n            let rewards = HTTP.get(url);\n            if (rewards.statusCode == 200) {\n                //get seperate rewards value\n                balance.rewards = JSON.parse(rewards.content).rewards;\n                //get total rewards value\n                balance.total_rewards = JSON.parse(rewards.content).total;\n\n            }\n        } catch (e) {\n            console.log(url);\n            console.log(e);\n        } \n        \n        // get commission\n        let validator = Validators.findOne({ $or: [{ operator_address: address }, { delegator_address: address }, { address: address }] })\n        if (validator) {\n            let url = sanitizeUrl(API + '/cosmos/distribution/v1beta1/validators/' + validator.operator_address + '/commission');\n            balance.operatorAddress = validator.operator_address;\n            try {\n                let rewards = HTTP.get(url);\n                if (rewards.statusCode == 200) {\n                    let content = JSON.parse(rewards.content).commission;\n                    if (content.commission && content.commission.length > 0)\n                        balance.commission = content.commission;\n\n                }\n\n            } catch (e) {\n                console.log(url);\n                console.log(e)\n            }\n        }\n\n        return balance;\n    },\n    'accounts.getDelegation' (address, validator) {\n        this.unblock();\n        let url = `/cosmos/staking/v1beta1/validators/${validator}/delegations/${address}`;\n        let delegations = fetchFromUrl(url);\n        console.log(delegations);\n        delegations = delegations && delegations.data.delegation_response;\n        if (delegations && delegations.delegation.shares)\n            delegations.delegation.shares = parseFloat(delegations.delegation.shares);\n\n        url = `/cosmos/staking/v1beta1/delegators/${address}/redelegations?dst_validator_addr=${validator}`;\n        let relegations = fetchFromUrl(url);\n        relegations = relegations && relegations.data.redelegation_responses;\n        let completionTime;\n        if (relegations) {\n            relegations.forEach((relegation) => {\n                let entries = relegation.entries\n                let time = new Date(entries[entries.length - 1].completion_time)\n                if (!completionTime || time > completionTime)\n                    completionTime = time\n            })\n            delegations.redelegationCompletionTime = completionTime;\n        }\n\n        url = `/cosmos/staking/v1beta1/validators/${validator}/delegations/${address}/unbonding_delegation`;\n        let undelegations = fetchFromUrl(url);\n        undelegations = undelegations && undelegations.data.result;\n        if (undelegations) {\n            delegations.unbonding = undelegations.entries.length;\n            delegations.unbondingCompletionTime = undelegations.entries[0].completion_time;\n        }\n        return delegations;\n    },\n    'accounts.getAllDelegations' (address) {\n        this.unblock();\n        let url = sanitizeUrl(API + '/cosmos/staking/v1beta1/delegators/' + address + '/delegations');\n\n        try {\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200) {\n                delegations = JSON.parse(delegations.content).result;\n                if (delegations && delegations.length > 0) {\n                    delegations.forEach((delegation, i) => {\n                        if (delegations[i] && delegations[i].shares)\n                            delegations[i].shares = parseFloat(delegations[i].shares);\n                    })\n                }\n\n                return delegations;\n            };\n        } catch (e) {\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'accounts.getAllUnbondings' (address) {\n        this.unblock();\n        let url = sanitizeUrl(API + '/cosmos/staking/v1beta1/delegators/' + address + '/unbonding_delegations');\n\n        try {\n            let unbondings = HTTP.get(url);\n            if (unbondings.statusCode == 200) {\n                unbondings = JSON.parse(unbondings.content).result;\n                return unbondings;\n            };\n        } catch (e) {\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'accounts.getAllRedelegations' (address, validator) {\n        this.unblock();\n        let url = `/cosmos/staking/v1beta1/v1beta1/delegators/${address}/redelegations&src_validator_addr=${validator}`;\n        try {\n            let result = fetchFromUrl(url);\n            if (result && result.data) {\n                let redelegations = {}\n                result.data.forEach((redelegation) => {\n                    let entries = redelegation.entries;\n                    redelegations[redelegation.validator_dst_address] = {\n                        count: entries.length,\n                        completionTime: entries[0].completion_time\n                    }\n                })\n                return redelegations\n            }\n        } catch (e) {\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'accounts.getRedelegations' (address) {\n        this.unblock();\n        let url = sanitizeUrl(API + '/cosmos/staking/v1beta1/v1beta1/delegators/' + address + '/redelegations');\n\n        try {\n            let userRedelegations = HTTP.get(url);\n            if (userRedelegations.statusCode == 200) {\n                userRedelegations = JSON.parse(userRedelegations.content).result;\n\n                return userRedelegations;\n            };\n        } catch (e) {\n            console.log(url);\n            console.log(e.response.content);\n        }\n    },\n})","import {Meteor} from \"meteor/meteor\";\nimport {Actions} from \"../actions.js\";\n\n// Global API configuration\nvar Api = new Restivus({\n  useDefaultAuth: true,\n  prettyJson: true\n})\n\nconst StatusOk = 200\nconst StatusInvalidInput = 400\nconst Success = \"Success\"\nconst BadRequest = \"Bad Request\"\nconst ApiServerOkMessage = \"Api server is up and running!\"\nconst ActionTypeLike = \"Like\"\nconst ActionTypeView = \"View\"\n\nApi.addRoute('ping', {authRequired: false}, {\n\n  get: function () {\n\n    return {\n      Code: StatusOk,\n      Message: ApiServerOkMessage,\n      Data: \"\"\n    }\n\n  },\n\n});\n\nApi.addRoute('actions/views/:cookbookId/:recipeId', {authRequired: false}, {\n\n  //get the views on a specific nft\n  get: function () {\n\n    if ( !Valid(this.urlParams.cookbookId) || !Valid(this.urlParams.recipeId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n\n    var result = GetViews(this.urlParams.cookbookId, this.urlParams.recipeId)\n\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: {totalViews: result}\n    }\n\n  },\n\n  //view a specific nft\n  post: function () {\n\n    if ( !Valid(this.urlParams.cookbookId) || !Valid(this.urlParams.recipeId) || !Valid(this.bodyParams.userId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n\n    var result = ViewNFT(this.urlParams.cookbookId, this.urlParams.recipeId, this.bodyParams.userId)\n\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: result\n    }\n\n  }\n\n});\n\nApi.addRoute('actions/likes/:cookbookId/:recipeId', {authRequired: false}, {\n\n  //get the likes on a specific nft\n  get: function () {\n\n    if ( !Valid(this.urlParams.cookbookId) || !Valid(this.urlParams.recipeId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n\n    var result = GetLikes(this.urlParams.cookbookId, this.urlParams.recipeId)\n\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: {totalLikes: result}\n    }\n\n  },\n\n  //like a specific nft\n  post: function () {\n\n    if ( !Valid(this.urlParams.cookbookId) || !Valid(this.urlParams.recipeId) || !Valid(this.bodyParams.userId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n\n    var result = ToggleLike(this.urlParams.cookbookId, this.urlParams.recipeId, this.bodyParams.userId)\n\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: result\n    }\n\n  }\n\n});\n\nApi.addRoute('actions/likes/:userId/:cookbookId/:recipeId', {authRequired: false}, {\n\n  //check if the specified user has liked the specified nft or not\n  get: function () {\n\n    if ( !Valid(this.urlParams.cookbookId) || !Valid(this.urlParams.recipeId) || !Valid(this.urlParams.userId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n\n    var result = GetLikeStatus(this.urlParams.cookbookId, this.urlParams.recipeId, this.urlParams.userId)\n\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: result\n    }\n\n  },\n});\n\nMeteor.methods({\n\n  //to like a specific nft, by a specific user\n  \"Actions.likeNft\": function (cookbookId, recipeId, userId) {\n    this.unblock();\n\n    if ( !Valid(cookbookId) || !Valid(recipeId) || !Valid(userId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n    var result = ToggleLike(cookbookId, recipeId, userId)\n    return {\n        Code: StatusOk,\n        Message: Success,\n        Data: result\n    }\n    \n  },\n\n  //to view a specific nft, by a specific user\n  \"Actions.viewNft\": function (cookbookId, recipeId, userId) {\n    this.unblock();\n\n    if ( !Valid(cookbookId) || !Valid(recipeId) || !Valid(userId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n    var result = ViewNFT(cookbookId, recipeId, userId) \n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: result\n    }   \n  },\n\n  //to get likes and view on an NFT\n  \"Actions.getLikes\": function (cookbookId, recipeId) {\n    this.unblock();\n\n    if ( !Valid(cookbookId) || !Valid(recipeId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n    //get likes on this nft\n    var likes = GetLikes(cookbookId, recipeId)\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: {\n        totalLikes: likes\n      }\n    }  \n  },\n  \"Actions.getViews\": function (cookbookId, recipeId) {\n    this.unblock();\n\n    if ( !Valid(cookbookId) || !Valid(recipeId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n    //get views on this nft\n    var views = GetViews(cookbookId, recipeId)\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: {\n        totalViews: views\n      }\n    }  \n  },\n\n  //to check if a certain user has liked a specific nft or not\n  \"Actions.getLikeStatus\": function (cookbookId, recipeId, userId) {\n    this.unblock();\n\n    if ( !Valid(cookbookId) || !Valid(recipeId) || !Valid(userId) ){\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: null\n      }\n    }\n    //get like status for this user\n    var result = GetLikeStatus(cookbookId, recipeId, userId)\n    return {\n      Code: StatusOk,\n      Message: Success,\n      Data: result\n    } \n  }\n\n});\n\nfunction ToggleLike(cookbookId, recipeId, userId) {\n\n  var action = {\n    cookbookId: cookbookId,\n    recipeId: recipeId,\n    actionType: ActionTypeLike,\n    from: userId\n  }\n\n  //check if the specified user has liked the specified nft\n  var result =  Actions.findOne(action)\n  var liked = false;\n\n  // if user has not already liked the same nft\n  if (result == null) {\n    // add user's like\n    Actions.insert(action)\n    liked = true\n  }\n  else{\n    //otherwise, remove the user's like\n    Actions.remove({\n      _id: result._id\n    });\n  }\n\n  var newLikes = GetLikes(cookbookId, recipeId)\n  return {\n    liked: liked,\n    totalLikes: newLikes\n  }\n\n}\n\nfunction ViewNFT(cookbookId, recipeId, userId){\n  var action = {\n    cookbookId: cookbookId,\n    recipeId: recipeId,\n    actionType: ActionTypeView,\n    from: userId\n  }\n\n  /*\n  upsert a view action, so that the insertion of multiple\n  views on same nft and from same user is disallowed\n  */\n  Actions.upsert(action, {$set: action})\n  var views = GetViews(cookbookId, recipeId, userId)\n\n  return {\n    viewed: true,\n    totalViews: views\n  }\n}\n\nfunction GetLikes(cookbookId, recipeId) {\n  //get likes on the specified nft\n  return Actions.find({\n    cookbookId: cookbookId, \n    recipeId: recipeId,\n    actionType: ActionTypeLike\n  }).count()\n}\n\nfunction GetViews(cookbookId, recipeId) {\n  //get views on the specified nft\n  return Actions.find({\n    cookbookId: cookbookId, \n    recipeId: recipeId,\n    actionType: ActionTypeView\n  }).count()\n}\n\nfunction GetLikeStatus(cookbookId, recipeId, userId){\n\n  var likeStatus = false\n   //check if the specified user has liked the specified nft\n   var result =  Actions.findOne({\n    cookbookId: cookbookId, \n    recipeId: recipeId,\n    actionType: ActionTypeLike, \n    from: userId\n  })\n\n  //if a like is found, return true\n  if (result != null){\n    likeStatus = true\n  }\n\n  return {\n    liked: likeStatus\n  }\n\n}\n\nfunction Valid(parameter) {\n  if (typeof(parameter) != \"string\"){\n    return false\n  }\n  if (parameter.length == 0){\n    return false\n  }\n  return true\n}\n\n","import { Meteor } from 'meteor/meteor';\nimport { Actions } from '../actions.js';\n\nMeteor.publish('Actions.list', function() {\n    return Actions.find({}, { sort: { ID: 1 } });\n});\n\nMeteor.publish('Actions.one', function(id) {\n    return Actions.find({ ID: id });\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Actions = new Mongo.Collection('actions');","import { Meteor } from 'meteor/meteor'\nimport { Analytics } from '../analytics.js'\nimport { Recipes } from '../../recipes/recipes.js'\nimport { Transactions } from '../../transactions/transactions.js'\nimport { sanitizeUrl } from '@braintree/sanitize-url'\nimport { HTTP } from 'meteor/http'\nimport { Notifications } from '../../notifications/notifications.js'\nimport { isNil } from 'lodash'\n\nconst SalesAnalyticsDenom = 'upylon'\nif (Meteor.isServer) {\n  Meteor.methods({\n    'Analytics.upsertSales': async function () {\n      this.unblock()\n      try {\n        // finding the transactions of sales type\n        const txns = Transactions.find(\n          {\n            'tx_response.raw_log': /ExecuteRecipe/,\n            'tx_response.logs.events.type': { $ne: 'burn' }\n          },\n          {\n            sort: { 'tx_response.timestamp': -1 }\n          }\n        ).fetch()\n\n        // looping through these transactions and extracting the required fields\n        for (let i = 0; i < txns.length; i++) {\n          // extracting the required fields\n          const recipeID = txns[i]?.tx?.body?.messages[0]?.recipe_id\n          const cookBookId = txns[i]?.tx?.body?.messages[0]?.cookbook_id\n          const recipe = getRecipe(cookBookId, recipeID)\n          const nftName = getNftName(recipe)\n          const nftUrl = getNftProperty(recipe, 'NFT_URL')\n          const nftFormat = getNftProperty(recipe, 'NFT_Format')\n          const amountString = getAmountString(txns[i])\n          const amountVal = getAmount(amountString)\n          const coinDenom = getCoin(amountString)\n          const receiver = getReceiver(txns[i])\n          const spender = getSpender(txns[i])\n\n          // constructing the sale object\n          const sale = {\n            txhash: txns[i]?.txhash,\n            type: 'Sale',\n            item_name: nftName,\n            item_img: nftUrl,\n            item_format: nftFormat,\n            amount: amountVal,\n            coin: coinDenom,\n            from: receiver,\n            to: spender,\n            time: txns[i]?.tx_response?.timestamp\n          }\n\n          // inserting the extracted information in nft-analytics collection\n          Analytics.upsert({ txhash: txns[i].txhash }, { $set: sale })\n\n          // additional properties for notifications\n          const res = Notifications.findOne({ txhash: txns[i].txhash })\n\n          sale.settled = false\n          sale.read = false\n          const timestamp = Math.floor(new Date() / 1000) // in seconds\n          sale.created_at = timestamp\n\n          // preserved values\n          if (res && 1) {\n            sale.settled = res.settled\n            sale.read = res.read\n            sale.created_at = res.created_at\n          }\n\n          // updated values\n          sale.time = null\n          sale.updated_at = timestamp // in seconds\n\n          // upserting info into Notifcations collection\n          Notifications.upsert({ txhash: txns[i].txhash }, { $set: sale })\n        }\n      } catch (e) {\n        console.log('upsertSales error: ', e)\n      }\n    },\n    'Analytics.getAllRecords': async function (limitVal, offsetVal) {\n      // all listings with limit and starting from offset\n      const recordsList = Analytics.find(\n        {},\n        {\n          sort: { time: -1 },\n          limit: limitVal,\n          skip: offsetVal\n        }\n      ).fetch()\n\n      for (let i = 0; i < recordsList.length; i++) {\n        const from = getUserNameInfo(recordsList[i]?.from)\n        const to = getUserNameInfo(recordsList[i].to)\n        recordsList[i].from = from?.username?.value\n        recordsList[i].to = to?.username?.value\n      }\n\n      const counts = Analytics.find({}).count()\n\n      return {\n        records: recordsList,\n        count: counts\n      }\n    },\n    'Analytics.upsertListings': async function () {\n      this.unblock()\n      try {\n        // finding the transactions of sales type\n        const txns = Transactions.find(\n          { 'tx_response.raw_log': /EventCreateRecipe/ },\n          { sort: { 'tx_response.timestamp': -1 } }\n        ).fetch()\n\n        for (let i = 0; i < txns.length; i++) {\n          const cookBookId = txns[i]?.tx?.body?.messages[0]?.cookbook_id\n          const recipeID = txns[i]?.tx?.body?.messages[0]?.id\n          const recipe = getRecipe(cookBookId, recipeID)\n          const nftName = getNftName(recipe)\n          const nftUrl = getNftProperty(recipe, 'NFT_URL')\n          const nftFormat = getNftProperty(recipe, 'NFT_Format')\n          const coinInvolved =\n            txns[i]?.tx?.body?.messages[0]?.coin_inputs[0]?.coins[0]\n          const creator = txns[i]?.tx?.body?.messages[0]?.creator\n\n          // constructing the listing object\n          const listing = {\n            txhash: txns[i]?.txhash,\n            itemImg: nftUrl,\n            itemName: nftName,\n            itemFormat: nftFormat,\n            amount: parseFloat(coinInvolved?.amount),\n            coin: coinInvolved?.denom,\n            type: 'Listing',\n            from: creator,\n            to: '-',\n            time: txns[i]?.tx_response?.timestamp,\n            R: recipe\n          }\n\n          // inserting the extracted information in nft-analytics collection\n\n          Analytics.upsert({ txhash: txns[i]?.txhash }, { $set: listing })\n        }\n      } catch (e) {\n        console.log('upserListing error: ', e)\n      }\n    },\n    'Analytics.getListings': async function (limitVal, offsetVal) {\n      // all listings with limit and starting from offset\n      const listings = Analytics.find(\n        {\n          type: 'Listing'\n        },\n        {\n          sort: { time: -1 },\n          limit: limitVal,\n          skip: offsetVal\n        }\n      ).fetch()\n\n      for (let i = 0; i < listings.length; i++) {\n        const creatorUsername = getUserNameInfo(listings[i]?.from)\n\n        listings[i].from = creatorUsername?.username?.value\n      }\n\n      return listings\n    },\n    'Analytics.getCreatorOfAllTime': async function () {\n      const mongoListing = Analytics.rawCollection()\n\n      const creatorOfAllTime = await mongoListing\n        .aggregate([\n          {\n            $match: {\n              type: 'Listing'\n            }\n          },\n          {\n            $group: {\n              _id: '$from', // grouping on from field\n              count: { $sum: 1 }\n            }\n          },\n          {\n            $sort: { count: -1 } // sorting on the basis of count in descending order\n          },\n          {\n            $limit: 1 // fetching the top-most document\n          }\n        ])\n        .toArray()\n\n      if (creatorOfAllTime[0] !== null && creatorOfAllTime[0] !== undefined) {\n        const creatorUsername = getUserNameInfo(creatorOfAllTime[0]._id)\n        creatorOfAllTime[0].from = creatorUsername?.username?.value\n        return creatorOfAllTime[0]\n      }\n\n      return null\n    },\n    'Analytics.getCreatorOfTheDay': async function () {\n      // start of today\n      const start = new Date()\n      start.setHours(0, 0, 0, 0)\n      const startDate = getFormattedDate(start)\n\n      // end of today\n      const end = new Date()\n      end.setDate(end.getDate() + 1)\n      end.setHours(0, 0, 0, 0)\n      const endDate = getFormattedDate(end)\n\n      const mongoListing = Analytics.rawCollection()\n      const creatorOfTheDay = await mongoListing\n        .aggregate([\n          {\n            $match: {\n              type: 'Listing',\n              time: {\n                $gte: startDate, // documents with time greater than or equal to startDate\n                $lt: endDate // and documents with time less than endDate\n              }\n            }\n          },\n          {\n            $group: {\n              _id: '$from', // group the matching documents on from field\n              count: { $sum: 1 } // count the documents in each group\n            }\n          },\n          {\n            $sort: { count: -1 } // sort the groups on count field in descending order\n          },\n          {\n            $limit: 1 // get the top-most document\n          }\n        ])\n        .toArray()\n\n      if (creatorOfTheDay[0] !== null && creatorOfTheDay[0] !== undefined) {\n        const creatorUsername = getUserNameInfo(creatorOfTheDay[0]._id)\n        creatorOfTheDay[0].from = creatorUsername?.username?.value\n        return creatorOfTheDay[0]\n      }\n      return null\n    },\n    'Analytics.getSales': async function (limitVal, offsetVal) {\n      // all sales with limit and starting from offset\n      const sales = Analytics.find(\n        {\n          type: 'Sale'\n        },\n        {\n          sort: { time: -1 },\n          limit: limitVal,\n          skip: offsetVal\n        }\n      ).fetch()\n\n      for (let i = 0; i < sales.length; i++) {\n        const buyerUsername = getUserNameInfo(sales[i]?.to)\n        const sellerUsername = getUserNameInfo(sales[i].from)\n\n        sales[i].to = buyerUsername?.username?.value\n        sales[i].from = sellerUsername?.username?.value\n      }\n      return sales\n    },\n    'Analytics.getSaleOfAllTime': async function () {\n      // sale of all time\n      const sale = Analytics.find(\n        {\n          type: 'Sale',\n          coin: SalesAnalyticsDenom\n        },\n        {\n          sort: { amount: -1, time: -1 },\n          limit: 1\n        }\n      ).fetch()\n\n      return extractSaleFromSales(sale)\n    },\n    'Analytics.getSaleOfTheDay': async function () {\n      const start = new Date()\n      start.setDate(start.getDate() - 1)\n      start.setHours(0, 0, 0, 0)\n      const startDate = getFormattedDate(start)\n\n      const end = new Date()\n      end.setDate(end.getDate() + 1)\n      end.setHours(0, 0, 0, 0)\n      const endDate = getFormattedDate(end)\n\n      // sale of today\n      const sale = Analytics.find(\n        {\n          type: 'Sale',\n          coin: SalesAnalyticsDenom,\n          time: { $gte: startDate, $lt: endDate }\n        },\n        {\n          sort: { amount: -1 },\n          limit: 1\n        }\n      ).fetch()\n\n      return extractSaleFromSales(sale)\n    },\n    'Analytics.getSalesGraph': async function () {\n      const start = new Date()\n      const end = new Date()\n      start.setDate(start.getDate() - 7)\n      end.setDate(end.getDate() - 6)\n\n      const graphData = []\n\n      for (let i = 0; i < 7; i++) {\n        start.setDate(start.getDate() + 1)\n        start.setHours(0, 0, 0, 0)\n        const startDate = getFormattedDate(start)\n\n        end.setDate(end.getDate() + 1)\n        end.setHours(0, 0, 0, 0)\n        const endDate = getFormattedDate(end)\n\n        // sales\n        const sales = Analytics.find({\n          type: 'Sale',\n          time: { $gte: startDate, $lt: endDate }\n        }).fetch()\n\n        graphData.push({\n          date: startDate,\n          sales: sales?.length\n        })\n      }\n\n      return graphData\n    }\n  })\n}\n\n// getFormattedDate to get date in format (2022-04-12)\nfunction getFormattedDate(date) {\n  let monthString = date.getMonth() + 1 + ''\n  if (monthString.length === 1) {\n    monthString = '0' + (date.getMonth() + 1)\n  }\n\n  let dateString = date.getDate() + ''\n  if (dateString.length === 1) {\n    dateString = '0' + date.getDate()\n  }\n\n  const formattedDate =\n    date.getFullYear() + '-' + monthString + '-' + dateString\n  return formattedDate\n}\n\nfunction getNftProperty(recipe, property) {\n  let nftUrl = ''\n  const itemOutputs = recipe?.entries?.item_outputs\n  if (itemOutputs !== null && itemOutputs !== undefined) {\n    if (!isNil(itemOutputs[0])) {\n      const properties = itemOutputs[0].strings\n      for (let i = 0; i < properties.length; i++) {\n        if (properties[i].key === property) {\n          nftUrl = properties[i].value\n          break\n        }\n      }\n    }\n  }\n  return nftUrl\n}\n\n// getting the nft name out of the recipe object\nfunction getNftName(recipe) {\n  return recipe?.name\n}\n\n// fetching username info\nfunction getUserNameInfo(address) {\n  let result\n  const url = sanitizeUrl(\n    `${Meteor.settings.remote.api}/pylons/account/address/${address}`\n  )\n  try {\n    const response = HTTP.get(url)\n    result = JSON.parse(response.content)\n  } catch (e) {\n    console.log('error getting userNameInfo: ', e)\n  }\n  return result\n}\n\n// getting amountString from the executed transaction\nfunction getAmountString(txn) {\n  return getAttributeFromEvent(txn, 'create_item', 'amount')\n}\n\n// getting the receiver out of the transaction object\nfunction getReceiver(txn) {\n  return getAttributeFromEvent(txn, 'create_item', 'receiver')\n}\n\n// getting the spender object out of the transaction object\nfunction getSpender(txn) {\n  return getAttributeFromEvent(txn, 'create_item', 'sender')\n}\n\nfunction getAttributeFromEvent(txn, event, attribute) {\n  let Val = ''\n  const events = txn?.tx_response?.logs[0]?.events\n\n  if (events !== null && events !== undefined) {\n    for (let i = 0; i < events.length; i++) {\n      if (events[i].type === event) {\n        const attributes = events[i].attributes\n        for (let j = 0; j < attributes.length; j++) {\n          if (attributes[j].key === attribute) {\n            Val = attributes[j].value\n            break\n          }\n        }\n      }\n    }\n  }\n\n  return Val\n}\n\n// separating amount from the amountString which is like '100000upylon'\nfunction getAmount(amountString) {\n  const quantity = parseFloat(amountString.replace(/\\D/g, ''))\n  return quantity\n}\n\n// separating the coin from the amountString\nfunction getCoin(amountString) {\n  const quantity = parseFloat(amountString.replace(/\\D/g, ''))\n  const coin = amountString.replace(quantity, '')\n  return coin\n}\n\nfunction extractSaleFromSales(sales) {\n  if (!isNil(sales[0])) {\n    const buyerUsername = getUserNameInfo(sales[0].to)\n    const sellerUsername = getUserNameInfo(sales[0].from)\n\n    sales[0].to = buyerUsername?.username?.value\n    sales[0].from = sellerUsername?.username?.value\n\n    return sales[0]\n  }\n\n  return null\n}\n\nfunction getRecipe(cookBookID, recipeID) {\n  let result\n  const url = sanitizeUrl(\n    `${Meteor.settings.remote.api}/pylons/recipe/${cookBookID}/${recipeID}`\n  )\n  try {\n    const response = HTTP.get(url)\n    result = JSON.parse(response.content)?.recipe\n  } catch (e) {\n    console.log('error getting recipe from api: ', cookBookID, recipeID, url)\n    // Recipes.insert(result)\n  }\n  return result\n}\n","import { Analytics } from '../analytics.js';\n\npublishComposite('Analytics.list', function(limit = 30){\n    return {\n        find(){\n            return Analytics.find({}, { sort: { ID: 1 } });\n        }\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Blockscon } from '../blocks/blocks.js';\n\nexport const Analytics = new Mongo.Collection('nft-analytics');\n\nAnalytics.helpers({\n    block(){\n        return Blockscon.findOne({height:this.height});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Blockscon } from '/imports/api/blocks/blocks.js';\nimport { Chain } from '/imports/api/chain/chain.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Validators } from '/imports/api/validators/validators.js';\nimport { ValidatorRecords, Analytics, VPDistributions} from '/imports/api/records/records.js';\nimport { VotingPowerHistory } from '/imports/api/voting-power/history.js';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Evidences } from '../../evidences/evidences.js';\nimport { sha256 } from 'js-sha256';\n// import { getAddress } from 'tendermint/lib/pubkey';\nimport * as cheerio from 'cheerio';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\n\ngetRemovedValidators = (prevValidators, validators) => {\n    // let removeValidators = [];\n    for (p in prevValidators){\n        for (v in validators){\n            if (prevValidators[p].address == validators[v].address){\n                prevValidators.splice(p,1);\n            }\n        }\n    }\n\n    return prevValidators;\n}\n\n\ngetValidatorFromConsensusKey = (validators, consensusKey) => {\n    for (v in validators){\n        try {\n            let pubkeyType = Meteor.settings.public.secp256k1?'tendermint/PubKeySecp256k1':'tendermint/PubKeyEd25519';\n            let pubkey = Meteor.call('bech32ToPubkey', consensusKey, pubkeyType);\n            if (validators[v].pub_key.value == pubkey){\n                return validators[v]\n            }\n        }\n        catch (e){\n            console.log(\"Error converting pubkey: %o\\n%o\", consensusKey, e)\n        }\n    }\n    return null;\n}\n\n\nexport const getValidatorProfileUrl = (identity) => {\n    console.log(\"Get validator avatar.\")\n    if (identity.length == 16){\n        var url = sanitizeUrl(`https://keybase.io/_/api/1.0/user/lookup.json?key_suffix=${identity}&fields=pictures`)\n        let response = HTTP.get()\n        if (response.statusCode == 200) {\n            let them = response?.data?.them\n            return them && them.length && them[0]?.pictures && them[0]?.pictures?.primary && them[0]?.pictures?.primary?.url;\n        } else {\n            console.log(JSON.stringify(response))\n        }\n    } else if (identity.indexOf(\"keybase.io/team/\")>0){\n        let teamPage = HTTP.get(identity);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        } else {\n            console.log(JSON.stringify(teamPage))\n        }\n    }\n}\n\n\ngetValidatorUptime = async (validatorSet) => {\n\n    // get validator uptime\n  \n    let url = sanitizeUrl(`${API}/cosmos/slashing/v1beta1/params`);\n    let response = HTTP.get(url);\n    let slashingParams = JSON.parse(response.content)\n\n    Chain.upsert({chainId:Meteor.settings.public.chainId}, {$set:{\"slashing\":slashingParams}});\n\n    for(let key in validatorSet){\n        // console.log(\"Getting uptime validator: %o\", validatorSet[key]);\n        try {\n            // console.log(\"=== Signing Info ===: %o\", signingInfo)\n\n            url = sanitizeUrl(`${API}/cosmos/slashing/v1beta1/signing_infos/${validatorSet[key].bech32ValConsAddress}`)\n            let response = HTTP.get(url);\n            let signingInfo = JSON.parse(response.content).val_signing_info;\n            if (signingInfo){\n                let valData = validatorSet[key]\n                valData.tombstoned = signingInfo.tombstoned;\n                valData.jailed_until = signingInfo.jailed_until;\n                valData.index_offset = parseInt(signingInfo.index_offset);\n                valData.start_height = parseInt(signingInfo.start_height);\n                valData.uptime = (slashingParams.params.signed_blocks_window - parseInt(signingInfo.missed_blocks_counter))/slashingParams.params.signed_blocks_window * 100;\n                Validators.upsert({bech32ValConsAddress:validatorSet[key].bech32ValConsAddress}, {$set:valData})\n            }\n        }\n        catch(e){\n            console.log(url);\n            console.log(\"Getting signing info of %o: %o\", validatorSet[key].bech32ValConsAddress, e);\n        }\n    }\n}\n\ncalculateVPDist = async (analyticsData, blockData) => {\n    console.log(\"===== calculate voting power distribution =====\");\n    let activeValidators = Validators.find({status:'BOND_STATUS_BONDED',jailed:false},{sort:{voting_power:-1}}).fetch();\n    let numTopTwenty = Math.ceil(activeValidators.length*0.2);\n    let numBottomEighty = activeValidators.length - numTopTwenty;\n\n    let topTwentyPower = 0;\n    let bottomEightyPower = 0;\n\n    let numTopThirtyFour = 0;\n    let numBottomSixtySix = 0;\n    let topThirtyFourPercent = 0;\n    let bottomSixtySixPercent = 0;\n\n\n\n    for (v in activeValidators){\n        if (v < numTopTwenty){\n            topTwentyPower += activeValidators[v].voting_power;\n        }\n        else{\n            bottomEightyPower += activeValidators[v].voting_power;\n        }\n\n\n        if (topThirtyFourPercent < 0.34){\n            topThirtyFourPercent += activeValidators[v].voting_power / analyticsData.voting_power;\n            numTopThirtyFour++;\n        }\n    }\n\n    bottomSixtySixPercent = 1 - topThirtyFourPercent;\n    numBottomSixtySix = activeValidators.length - numTopThirtyFour;\n\n    let vpDist = {\n        height: blockData.height,\n        numTopTwenty: numTopTwenty,\n        topTwentyPower: topTwentyPower,\n        numBottomEighty: numBottomEighty,\n        bottomEightyPower: bottomEightyPower,\n        numTopThirtyFour: numTopThirtyFour,\n        topThirtyFourPercent: topThirtyFourPercent,\n        numBottomSixtySix: numBottomSixtySix,\n        bottomSixtySixPercent: bottomSixtySixPercent,\n        numValidators: activeValidators.length,\n        totalVotingPower: analyticsData.voting_power,\n        blockTime: blockData.time,\n        createAt: new Date()\n    }\n\n    console.log(vpDist);\n\n    VPDistributions.insert(vpDist);\n}\n\n// var filtered = [1, 2, 3, 4, 5].filter(notContainedIn([1, 2, 3, 5]));\n// console.log(filtered); // [4]\n\nMeteor.methods({\n    'blocks.averageBlockTime'(address){\n        this.unblock();\n        let blocks = Blockscon.find({proposerAddress:address}).fetch();\n        let heights = blocks.map((block) => {\n            return block.height;\n        });\n        let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n        // console.log(blocksStats);\n\n        let totalBlockDiff = 0;\n        for (b in blocksStats){\n            totalBlockDiff += blocksStats[b].timeDiff;\n        }\n        return totalBlockDiff/heights.length;\n    },\n    'blocks.getLatestHeight': function() {\n        this.unblock();\n        let url = sanitizeUrl(RPC+'/status');\n        try{\n            let response = HTTP.get(url);\n            let status = JSON.parse(response.content);\n            return (status.result.sync_info.latest_block_height);\n        }\n        catch (e){\n            return 0;\n        }\n    },\n    'blocks.getCurrentHeight': function() {\n        this.unblock();\n        let currHeight = Blockscon.find({},{sort:{height:-1},limit:1}).fetch();\n        // console.log(\"currentHeight:\"+currHeight);\n        let startHeight = Meteor.settings.params.startHeight;\n        if (currHeight && currHeight.length == 1) {\n            let height = currHeight[0].height;\n            if (height > startHeight)\n                return height\n        }\n        return startHeight\n    },\n    'blocks.blocksUpdate': async function() {\n        this.unblock();\n        if (SYNCING)\n            return \"Syncing...\";\n        else console.log(\"start to sync\");\n        // Meteor.clearInterval(Meteor.timerHandle);\n        // get the latest height\n        let until = Meteor.call('blocks.getLatestHeight');\n        // console.log(until);\n        // get the current height in db\n        let curr = Meteor.call('blocks.getCurrentHeight');\n        console.log(curr);\n        // loop if there's update in db\n        if (until > curr) {\n            SYNCING = true;\n\n            let validatorSet = [];\n            // get latest validator candidate information\n\n            let url = sanitizeUrl(API + '/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED&pagination.limit=200&pagination.count_total=true');\n\n            try{\n                let response = HTTP.get(url);\n                let result = JSON.parse(response.content).validators;\n                result.forEach((validator) => validatorSet[validator.consensus_pubkey.key] = validator);\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n\n            try{\n                url = sanitizeUrl(API + '/cosmos/staking/v1beta1/validators?status=BOND_STATUS_UNBONDING&pagination.limit=200&pagination.count_total=true');\n                let response = HTTP.get(url);\n                let result = JSON.parse(response.content).validators;\n                result.forEach((validator) => validatorSet[validator.consensus_pubkey.key] = validator);\n            }\n            catch(e){\n                console.log(url);\n                console.log(e); \n            }\n\n            try{\n                url = sanitizeUrl(API + '/cosmos/staking/v1beta1/validators?status=BOND_STATUS_UNBONDED&pagination.limit=200&pagination.count_total=true');\n                let response = HTTP.get(url);\n                let result = JSON.parse(response.content).validators;\n                result.forEach((validator) => validatorSet[validator.consensus_pubkey.key] = validator);\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n\n            // console.log(\"validaotor set: %o\", validatorSet);\n            let totalValidators = Object.keys(validatorSet).length;\n            console.log(\"all validators: \"+ totalValidators);\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{totalValidators:totalValidators}});\n\n            for (let height = curr+1 ; height <= until ; height++) {\n                let startBlockTime = new Date();\n                // add timeout here? and outside this loop (for catched up and keep fetching)?\n                this.unblock();\n\n                url = sanitizeUrl(`${API}/blocks?height=${height}`);\n                let analyticsData = {};\n\n                const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n                const bulkUpdateLastSeen = Validators.rawCollection().initializeUnorderedBulkOp();\n                const bulkValidatorRecords = ValidatorRecords.rawCollection().initializeUnorderedBulkOp();\n                const bulkVPHistory = VotingPowerHistory.rawCollection().initializeUnorderedBulkOp();\n                const bulkTransactions = Transactions.rawCollection().initializeUnorderedBulkOp();\n\n                console.log(\"Getting block at height: %o\", height);\n                try{\n                    let startGetHeightTime = new Date();\n                    \n                    let response = HTTP.get(url);\n\n                    // store height, hash, numtransaction and time in db\n                    let blockData = {};\n                    let block = JSON.parse(response.content);\n                    blockData.height = height;\n                    blockData.hash = block.block_id.hash;\n                    blockData.transNum = block.block.data.txs?block.block.data.txs.length:0;\n                    blockData.time = block.block.header.time;\n                    blockData.lastBlockHash = block.block.header.last_block_id.hash;\n                    blockData.proposerAddress = block.block.header.proposer_address;\n                    blockData.validators = [];\n\n\n                    // save txs in database\n                    if (block.block.data.txs && block.block.data.txs.length > 0){\n                        for (t in block.block.data.txs){\n                            bulkTransactions.insert({\n                                // hash has to be in uppercase\n                                txhash: sha256(Buffer.from(block.block.data.txs[t], 'base64')).toUpperCase(),\n                                height: parseInt(height),\n                                processed: false\n                            })\n                        }\n\n                        if (bulkTransactions.length > 0){\n                            bulkTransactions.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                                if (result){\n                                    // console.log(result);\n                                }\n                            });\n                        }\n                    }\n\n                    // save double sign evidences\n                    if (block.block.evidence.evidenceList){\n                        Evidences.insert({\n                            height: height,\n                            evidence: block.block.evidence.evidenceList\n                        });\n                    }\n\n                    // console.log(\"signatures: %o\", block.block.lastCommit.signaturesList)\n\n                    blockData.precommitsCount = block.block.last_commit.signatures.length;\n\n                    analyticsData.height = height;\n\n                    let endGetHeightTime = new Date();\n                    console.log(\"Get height time: \"+((endGetHeightTime-startGetHeightTime)/1000)+\"seconds.\");\n\n\n                    let startGetValidatorsTime = new Date();\n                    // update chain status\n\n                    let validators = []\n                    let page = 0;\n                    // let nextKey = 0;\n                    try {\n                        let result;\n\n                        do {\n                            let url = sanitizeUrl(RPC+`/validators?height=${height}&page=${++page}&per_page=100`);\n                            let response = HTTP.get(url);\n                            result = JSON.parse(response.content).result;\n                            // console.log(\"========= validator result ==========: %o\", result)\n                            validators = [...validators, ...result.validators];\n                                \n                            // console.log(validators.length);\n                            // console.log(parseInt(result.total));\n                        }\n                        while (validators.length < parseInt(result.total))\n\n                    }\n                    catch(e){\n                        console.log(\"Getting validator set at height %o: %o\", height, e)\n                    }\n\n                    let genesisTime;\n\n                    try {\n                        let genesisResult;\n\n                        do {\n                            let url = sanitizeUrl(RPC+`/genesis`);\n                            let response = HTTP.get(url);\n                            genesisResult = JSON.parse(response.content).result;\n\n                            //  GenesisTime time at start of chain\n                            console.log(\"========= genesis time  ==========: %v\", genesisResult.genesis.genesis_time)\n                            genesisTime = genesisResult.genesis.genesis_time;\n                            \n                       \n\n                        }\n                        while (!genesisTime)\n\n                    }\n                    catch(e){\n                        console.log(\"Error getting genesisResult\")\n                    }\n\n                    // console.log(validators)\n\n                    ValidatorSets.insert({\n                        block_height: height,\n                        validators: validators\n                    })\n\n                    blockData.validatorsCount = validators.length;\n\n                    // temporarily add bech32 concensus keys to the validator set list\n                    let tempValidators = [];\n                    for (let v in validators){\n                        validators[v].valconsAddress = Meteor.call('hexToBech32', validators[v].address, Meteor.settings.public.bech32PrefixConsAddr);\n                        tempValidators[validators[v].address] = validators[v];\n                    }\n                    console.log(\"hexToBech32 post\");\n                    validators = tempValidators;\n\n                    //console.log(\"before comparing precommits: %o\", validators);\n\n                    // Tendermint v0.33 start using \"signatures\" in last block instead of \"precommits\"\n                    let precommits = block.block.last_commit.signatures; \n                    if (precommits != null){\n                        // console.log(precommits);\n                        for (let i=0; i<precommits.length; i++){\n                            if (precommits[i] != null){\n                                blockData.validators.push(precommits[i].validator_address);\n                            }\n                        }\n\n                        analyticsData.precommits = precommits.length;\n                        // record for analytics\n                        // PrecommitRecords.insert({height:height, precommits:precommits.length});\n                    }\n\n                    if (height > 1){\n                        // record precommits and calculate uptime\n                        // only record from block 2 \n                        for (i in validators){\n                            let address = validators[i].address;\n                            let record = {\n                                height: height,\n                                address: address,\n                                exists: false,\n                                voting_power: parseInt(validators[i].voting_power)\n                            }\n\n                            for (j in precommits){\n                                if (precommits[j] != null){\n                                    let precommitAddress = precommits[j].validator_address;\n                                    if (address == precommitAddress){\n                                        record.exists = true;\n                                        bulkUpdateLastSeen.find({address:precommitAddress}).upsert().updateOne({$set:{lastSeen:blockData.time}});\n                                        precommits.splice(j,1);\n                                        break;\n                                    }\n                                }\n                            }\n\n                            bulkValidatorRecords.insert(record);\n                            // ValidatorRecords.update({height:height,address:record.address},record);\n                        }\n                    }\n                        \n                    let startBlockInsertTime = new Date();\n                    Blockscon.insert(blockData);\n                    let endBlockInsertTime = new Date();\n                    console.log(\"Block insert time: \"+((endBlockInsertTime-startBlockInsertTime)/1000)+\"seconds.\");\n\n                    let chainStatus = Chain.findOne({chainId:block.block.header.chain_id});\n                    let lastSyncedTime = chainStatus?chainStatus.lastSyncedTime:0;\n                    let timeDiff;\n                    let blockTime = Meteor.settings.params.defaultBlockTime;\n                    if (lastSyncedTime){\n                        let dateLatest = new Date(blockData.time);\n                        let dateLast = new Date(lastSyncedTime);\n\n                        // calculating time to generate average block time \n                        let genesisTimeStamp = new Date(genesisTime);\n                        timeDiff = Math.abs(dateLatest.getTime() - dateLast.getTime());\n                        blockTime = (dateLatest.getTime() - genesisTimeStamp.getTime()) / blockData.height;\n                    }\n\n                    let endGetValidatorsTime = new Date();\n                    console.log(\"Get height validators time: \"+((endGetValidatorsTime-startGetValidatorsTime)/1000)+\"seconds.\");\n\n                    Chain.update({chainId:block.block.header.chainId}, {$set:{lastSyncedTime:blockData.time, blockTime:blockTime}});\n\n                    analyticsData.averageBlockTime = blockTime;\n                    analyticsData.timeDiff = timeDiff;\n\n                    analyticsData.time = blockData.time;\n\n                    // initialize validator data at first block\n                    // if (height == 1){\n                    //     Validators.remove({});\n                    // }\n\n                    analyticsData.voting_power = 0;\n\n                    let startFindValidatorsNameTime = new Date();\n                    for (v in validatorSet){\n                        let valData = validatorSet[v];\n\n                        valData.tokens = parseInt(valData.tokens);\n                        valData.unbonding_height = parseInt(valData.unbonding_height)\n\n                        let valExist = Validators.findOne({\"consensus_pubkey.key\":v});\n                            \n                        // console.log(valData);\n\n                        // console.log(\"===== voting power ======: %o\", valData)\n                        analyticsData.voting_power += valData.voting_power\n\n                        // console.log(analyticsData.voting_power);\n                        if (!valExist && valData.consensus_pubkey){\n                                \n                            // let val = getValidatorFromConsensusKey(validators, v);\n                            // get the validator hex address and other bech32 addresses.\n\n                            valData.delegator_address = Meteor.call('getDelegator', valData.operator_address);\n\n                            // console.log(\"get hex address\")\n                            // valData.address = getAddress(valData.consensusPubkey);\n                            console.log(\"get bech32 consensus pubkey\");\n                            valData.bech32ConsensusPubKey = Meteor.call('pubkeyToBech32', valData.consensus_pubkey, Meteor.settings.public.bech32PrefixConsPub);\n\n                            \n                            valData.address = Meteor.call('getAddressFromPubkey', valData.consensus_pubkey);\n                            valData.bech32ValConsAddress = Meteor.call('hexToBech32', valData.address, Meteor.settings.public.bech32PrefixConsAddr);\n\n                            // assign back to the validator set so that we can use it to find the uptime\n\n                            if (validatorSet[v])\n                                validatorSet[v].bech32ValConsAddress = valData.bech32ValConsAddress;\n\n                                \n                            // First time adding validator to the database.\n                            // Fetch profile picture from Keybase\n\n                            if (valData.description && valData.description.identity){\n                                try{\n                                    valData.profile_url = getValidatorProfileUrl(valData.description.identity)\n                                }\n                                catch (error){\n                                    console.log(\"Error fetching keybase: %o\", error)\n                                }\n                            }\n                                    \n\n                            valData.accpub = Meteor.call('pubkeyToBech32', valData.consensus_pubkey, Meteor.settings.public.bech32PrefixAccPub);\n                            valData.operator_pubkey = Meteor.call('pubkeyToBech32', valData.consensus_pubkey, Meteor.settings.public.bech32PrefixValPub);\n\n                            // insert first power change history \n\n                            // valData.voting_power = validators[valData.consensusPubkey.value]?parseInt(validators[valData.consensusPubkey.value].votingPower):0;\n                            valData.voting_power = validators[valData.address]?parseInt(validators[valData.address].voting_power):0;\n                            valData.proposer_priority = validators[valData.address]?parseInt(validators[valData.address].proposer_priority):0;\n\n                            console.log(\"Validator not found. Insert first VP change record.\")\n\n                            // console.log(\"first voting power: %o\", valData.voting_power);\n                            bulkVPHistory.insert({\n                                address: valData.address,\n                                prev_voting_power: 0,\n                                voting_power: valData.voting_power,\n                                type: 'add',\n                                height: blockData.height,\n                                block_time: blockData.time\n                            });\n                            // }\n                        }\n                        else{\n                            // console.log(valData);\n                            valData.address = valExist.address;\n\n                            // assign to valData for getting self delegation\n                            valData.delegator_address = valExist.delegator_address;\n                            valData.bech32ValConsAddress = valExist.bech32ValConsAddress;\n\n                            if (validatorSet[v]){\n                                validatorSet[v].bech32ValConsAddress = valExist.bech32ValConsAddress;\n                            }\n                            // console.log(valExist);\n                            // console.log(validators[valExist.address])\n                            // if (validators[valData.consensusPubkey.value]){\n                            if (validators[valExist.address]){\n                                // Validator exists and is in validator set, update voitng power.\n                                // If voting power is different from before, add voting power history\n                                valData.voting_power = parseInt(validators[valExist.address].voting_power);\n                                valData.proposer_priority = parseInt(validators[valExist.address].proposer_priority);\n                                let prevVotingPower = VotingPowerHistory.findOne({address:valExist.address}, {height:-1, limit:1});\n\n                                console.log(\"Validator already in DB. Check if VP changed.\");\n                                if (prevVotingPower){\n                                    if (prevVotingPower.voting_power != valData.voting_power){\n                                        let changeType = (prevVotingPower.voting_power > valData.voting_power)?'down':'up';\n                                        let changeData = {\n                                            address: valExist.address,\n                                            prev_voting_power: prevVotingPower.voting_power,\n                                            voting_power: valData.voting_power,\n                                            type: changeType,\n                                            height: blockData.height,\n                                            block_time: blockData.time\n                                        };\n                                        bulkVPHistory.insert(changeData);\n                                    }\n                                }\n                            }\n                            else{\n                                // Validator is not in the set and it has been removed.\n                                // Set voting power to zero and add voting power history.\n\n                                valData.address = valExist.address;\n                                valData.voting_power = 0;\n                                valData.proposer_priority = 0;\n\n                                let prevVotingPower = VotingPowerHistory.findOne({address:valExist.address}, {height:-1, limit:1});\n\n                                if (prevVotingPower && (prevVotingPower.voting_power > 0)){\n                                    console.log(\"Validator is in DB but not in validator set now. Add remove VP change.\");\n                                    bulkVPHistory.insert({\n                                        address: valExist.address,\n                                        prev_voting_power: prevVotingPower,\n                                        voting_power: 0,\n                                        type: 'remove',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n                                }\n                            }\n                        }\n\n                        // only update validator infor during start of crawling, end of crawling or every validator update window\n                        if ((height == curr+1) || (height == Meteor.settings.params.startHeight+1) || (height == until) || (height % Meteor.settings.params.validatorUpdateWindow == 0)){\n                            if ((height == Meteor.settings.params.startHeight+1) || (height % Meteor.settings.params.validatorUpdateWindow == 0)){    \n                                if (valData.status == 'BOND_STATUS_BONDED'){\n                                    url = sanitizeUrl(`${API}/cosmos/staking/v1beta1/validators/${valData.operator_address}/delegations/${valData.delegator_address}`)\n                                    try{\n                                        console.log(\"Getting self delegation\");\n        \n                                        let response = HTTP.get(url);\n                                        let selfDelegation = JSON.parse(response.content).delegation_response;\n        \n                                        valData.self_delegation = (selfDelegation.delegation && selfDelegation.delegation.shares)?parseFloat(selfDelegation.delegation.shares)/parseFloat(valData.delegator_shares):0;\n        \n                                    }\n                                    catch(e){\n                                        console.log(url);\n                                        console.log(\"Getting self delegation: %o\", e);\n                                        valData.self_delegation = 0;\n                                            \n                                    }\n                                }\n                            }\n\n                            console.log(\"Add validator upsert to bulk operations.\")\n                            bulkValidators.find({\"address\": valData.address}).upsert().updateOne({$set:valData});\n                        }\n                    }\n\n                    // store valdiators exist records\n                    // let existingValidators = Validators.find({address:{$exists:true}}).fetch();\n\n                    // update uptime by the end of the crawl or update window\n                    if ((height % Meteor.settings.params.validatorUpdateWindow == 0) || (height == until)){\n                        console.log(\"Update validator uptime.\")\n                        getValidatorUptime(validatorSet)\n                    }\n\n\n\n                    let endFindValidatorsNameTime = new Date();\n                    console.log(\"Get validators name time: \"+((endFindValidatorsNameTime-startFindValidatorsNameTime)/1000)+\"seconds.\");\n\n                    // record for analytics\n                    let startAnayticsInsertTime = new Date();\n                    Analytics.insert(analyticsData);\n                    let endAnalyticsInsertTime = new Date();\n                    console.log(\"Analytics insert time: \"+((endAnalyticsInsertTime-startAnayticsInsertTime)/1000)+\"seconds.\");\n\n                    // calculate voting power distribution every 60 blocks ~ 5mins\n\n                    if (height % 60 == 1){\n                        calculateVPDist(analyticsData, blockData)\n                    }\n\n                    let startVUpTime = new Date();\n                    if (bulkValidators.length > 0){\n                        console.log(\"############ Update validators ############\");\n                        bulkValidators.execute((err, result) => {\n                            if (err){\n                                console.log(\"Error while bulk insert validators: %o\",err);\n                            }\n                            if (result) {\n                                if (bulkUpdateLastSeen.length > 0) {\n                                    bulkUpdateLastSeen.execute((err, result) => {\n                                        if (err) {\n                                            console.log(\"Error while bulk update validator last seen: %o\", err);\n                                        }\n                                        if (result) {\n                                        }\n                                    })\n                                }\n                            }\n                        });\n                    }\n\n                    let endVUpTime = new Date();\n                    console.log(\"Validator update time: \"+((endVUpTime-startVUpTime)/1000)+\"seconds.\");\n\n                    let startVRTime = new Date();\n                    if (bulkValidatorRecords.length > 0){\n                        bulkValidatorRecords.execute((err) => {\n                            if (err){\n                                console.log(err);\n                            }\n                        });\n                    }\n\n                    let endVRTime = new Date();\n                    console.log(\"Validator records update time: \"+((endVRTime-startVRTime)/1000)+\"seconds.\");\n\n                    if (bulkVPHistory.length > 0){\n                        bulkVPHistory.execute((err) => {\n                            if (err){\n                                console.log(err);\n                            }\n                        });\n                    }\n\n\n                    // }\n                }\n                catch (e){\n                    console.log(\"Block syncing stopped: %o\", e);\n                    SYNCING = false;\n                    return \"Stopped\";\n                }\n                let endBlockTime = new Date();\n                console.log(\"This block used: \"+((endBlockTime-startBlockTime)/1000)+\"seconds.\");\n            }\n            SYNCING = false;\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{lastBlocksSyncedTime:new Date()}});\n        }\n\n        return until;\n    },\n    'addLimit': function(limit) {\n        // console.log(limit+10)\n        return (limit+10);\n    },\n    'hasMore': function(limit) {\n        if (limit > Meteor.call('getCurrentHeight')) {\n            return (false);\n        } else {\n            return (true);\n        }\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Blockscon } from '../blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Transactions } from '../../transactions/transactions.js';\n\npublishComposite('blocks.height', function(limit){\n    return {\n        find(){\n            return Blockscon.find({}, {limit: limit, sort: {height: -1}})\n        },\n        children: [\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('blocks.findOne', function(height){\n    return {\n        find(){\n            return Blockscon.find({height:height})\n        },\n        children: [\n            {\n                find(block){\n                    return Transactions.find(\n                        {height:block.height}\n                    )\n                }\n            },\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Blockscon = new Mongo.Collection('blocks');\n\nBlockscon.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n});\n\n// Blockscon.helpers({\n//     sorted(limit) {\n//         return Blockscon.find({}, {sort: {height:-1}, limit: limit});\n//     }\n// });\n\n\n// Meteor.setInterval(function() {\n//     Meteor.call('blocksUpdate', (error, result) => {\n//         console.log(result);\n//     })\n// }, 30000000);","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Chain, ChainStates } from '../chain.js';\nimport Coin from '../../../../both/utils/coins.js';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nfindVotingPower = (validator, genValidators) => {\n    for (let v in genValidators){\n        if (validator.pub_key.value == genValidators[v].pub_key.value){\n            return parseInt(genValidators[v].power);\n        }\n    }\n}\n\nMeteor.methods({\n    'chain.getConsensusState': function(){\n        this.unblock();\n        let url = sanitizeUrl(RPC+'/dump_consensus_state');\n        try{\n            let response = HTTP.get(url);\n            let consensus = JSON.parse(response.content);\n            consensus = consensus.result;\n            let height = consensus.round_state.height;\n            let round = consensus.round_state.round;\n            let step = consensus.round_state.step;\n            let votedPower = Math.round(parseFloat(consensus.round_state.votes[round].prevotes_bit_array.split(\" \")[3])*100);\n\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{\n                votingHeight: height,\n                votingRound: round,\n                votingStep: step,\n                votedPower: votedPower,\n                proposerAddress: consensus.round_state.validators.proposer.address,\n                prevotes: consensus.round_state.votes[round].prevotes,\n                precommits: consensus.round_state.votes[round].precommits\n            }});\n        }\n        catch(e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'chain.updateStatus': async function(){\n        this.unblock();\n        let url = \"\";\n        try{\n            url = sanitizeUrl(API + '/cosmos/base/tendermint/v1beta1/blocks/latest');\n            let response = HTTP.get(url);\n            let latestBlock = JSON.parse(response.content);\n\n            let chain = {};\n            chain.chainId = latestBlock.block.header.chain_id;\n            chain.latestBlockHeight = parseInt(latestBlock.block.header.height);\n            chain.latestBlockTime = latestBlock.block.header.time;\n            let latestState = ChainStates.findOne({}, {sort: {height: -1}})\n            if (latestState && latestState.height >= chain.latestBlockHeight) {\n                return `no updates (getting block ${chain.latestBlockHeight} at block ${latestState.height})`\n            }\n\n            // Since Tendermint v0.33, validator page default set to return 30 validators.\n            // Query latest height with page 1 and 100 validators per page.\n\n            // validators = validators.validatorsList;\n            // chain.validators = validators.length;\n\n            let validators = []\n            let page = 0;\n\n            do {\n                url = sanitizeUrl(RPC+`/validators?page=${++page}&per_page=100`);\n                let response = HTTP.get(url);\n                result = JSON.parse(response.content).result;\n                validators = [...validators, ...result.validators];\n                \n            }\n            while (validators.length < parseInt(result.total))\n\n            chain.validators = validators.length;\n            let activeVP = 0;\n            for (v in validators){\n                activeVP += parseInt(validators[v].voting_power);\n            }\n            chain.activeVotingPower = activeVP;\n\n            // update staking params\n            try {\n                url = sanitizeUrl(API + '/cosmos/staking/v1beta1/params');\n                response = HTTP.get(url);\n                chain.staking = JSON.parse(response.content);\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            // Get chain states\n            if (parseInt(chain.latestBlockHeight) > 0){\n                let chainStates = {};\n                chainStates.height = parseInt(chain.latestBlockHeight);\n                chainStates.time = new Date(chain.latestBlockTime);\n\n                try{\n                    url = sanitizeUrl(API + '/cosmos/staking/v1beta1/pool');\n                    let response = HTTP.get(url);\n                    let bonding = JSON.parse(response.content).pool;\n                    chainStates.bondedTokens = parseInt(bonding.bonded_tokens);\n                    chainStates.notBondedTokens = parseInt(bonding.not_bonded_tokens);\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                if ( Coin.StakingCoin.denom ) {\n                    if (Meteor.settings.public.modules.bank){\n                        try{\n                            url = sanitizeUrl(API + '/cosmos/bank/v1beta1/supply/by_denom?denom=' + Coin.StakingCoin.denom);\n                            let response = HTTP.get(url);\n                            let supply = JSON.parse(response.content);\n                            chainStates.totalSupply = parseInt(supply.amount.amount);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                        // update bank params\n                        try {\n                            url = sanitizeUrl(API + '/cosmos/bank/v1beta1/params');\n                            response = HTTP.get(url);\n                            chain.bank = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                    }\n\n                    if (Meteor.settings.public.modules.distribution){\n                        try {\n                            url = sanitizeUrl(API + '/cosmos/distribution/v1beta1/community_pool');\n                            let response = HTTP.get(url);\n                            let pool = JSON.parse(response.content).pool;\n                            if (pool && pool.length > 0){\n                                chainStates.communityPool = [];\n                                pool.forEach((amount) => {\n                                    chainStates.communityPool.push({\n                                        denom: amount.denom,\n                                        amount: parseFloat(amount.amount)\n                                    })\n                                })\n                            }\n                        }\n                        catch (e){\n                            console.log(e)\n                        }\n\n                        // update distribution params\n                        try {\n                            url = sanitizeUrl(API + '/cosmos/distribution/v1beta1/params');\n                            response = HTTP.get(url);\n                            chain.distribution = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    }\n\n                    if (Meteor.settings.public.modules.minting){\n                        try{\n                            url = sanitizeUrl(API + '/cosmos/mint/v1beta1/inflation');\n                            let response = HTTP.get(url);\n                            let inflation = JSON.parse(response.content).inflation;\n                            // response = HTTP.get(url);\n                            // let inflation = JSON.parse(response.content).result;\n                            if (inflation){\n                                chainStates.inflation = parseFloat(inflation)\n                            }\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                        try{\n                            url = sanitizeUrl(API + '/cosmos/mint/v1beta1/annual_provisions');\n                            let response = HTTP.get(url);\n                            let provisions = JSON.parse(response.content).annual_provisions;\n                            console.log(provisions)\n                            if (provisions){\n                                chainStates.annualProvisions = parseFloat(provisions)\n                            }\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                        // update mint params\n                        try {\n                            url = sanitizeUrl(API + '/cosmos/mint/v1beta1/params');\n                            response = HTTP.get(url);\n                            chain.mint = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    }\n\n                    if (Meteor.settings.public.modules.gov){\n                        // update gov params\n                        try {\n                            url = sanitizeUrl(API + '/cosmos/gov/v1beta1/params/tallying');\n                            response = HTTP.get(url);\n                            chain.gov = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    }\n                }\n\n                ChainStates.insert(chainStates);\n            }\n\n            Chain.update({chainId:chain.chainId}, {$set:chain}, {upsert: true});\n\n            // chain.totalVotingPower = totalVP;\n\n            // validators = Validators.find({}).fetch();\n            // console.log(validators);\n            return chain.latestBlockHeight;\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n            return \"Error getting chain status.\";\n        }\n    },\n    'chain.getLatestStatus': function(){\n        this.unblock();\n        Chain.find().sort({created:-1}).limit(1);\n    },\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Chain, ChainStates } from '../chain.js';\nimport { CoinStats } from '../../coin-stats/coin-stats.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('chainStates.latest', function () {\n    return [\n        ChainStates.find({},{sort:{height:-1},limit:1}),\n        CoinStats.find({},{sort:{last_updated_at:-1},limit:1})\n    ];\n});\n\npublishComposite('chain.status', function(){\n    return {\n        find(){\n            return Chain.find({chainId:Meteor.settings.public.chainId});\n        },\n        children: [\n            {\n                find(chain){\n                    return Validators.find(\n                        {},\n                        {fields:{\n                            address:1,\n                            description:1,\n                            operatorAddress:1,\n                            status:-1,\n                            jailed:1,\n                            profile_url:1\n                        }}\n                    )\n                }\n            }\n        ]\n    }\n});","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Chain = new Mongo.Collection('chain');\nexport const ChainStates = new Mongo.Collection('chain_states')\n\nChain.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { CoinStats } from '../coin-stats.js';\nimport { HTTP } from 'meteor/http';\nimport { Transactions } from '/imports/api/transactions/transactions.js';\nimport { string } from 'prop-types';\n\nMeteor.methods({\n    'coinStats.getCoinStats': function(){\n        this.unblock();\n        let transactionsHandle, transactions, transactionsExist;\n        let loading = true;\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            try{\n                let now = new Date();\n                now.setMinutes(0); \n\n                if (Meteor.isClient){\n                    transactionsHandle = Meteor.subscribe('transactions.validator', props.validator, props.delegator, props.limit);\n                    loading = !transactionsHandle.ready();\n                }\n            \n                if (Meteor.isServer || !loading){\n                    transactions = Transactions.find({}, {sort:{height:-1}});\n            \n                    if (Meteor.isServer){\n                        loading = false;\n                        transactionsExist = !!transactions;\n                    }\n                    else{\n                        transactionsExist = !loading && !!transactions;\n                    }\n                }\n    \n                if(!transactionsExist){\n                    return false;\n                }\n                let items = Transactions.find({\n                    $or: [\n                        {\"tx.body.messages.@type\":\"/Pylonstech.pylons.pylons.QueryListItemByOwner\"}\n                    ]\n                }).fetch();\n\n                if (items.length > 0){  \n                    let strings = items.Strings;\n                    if(strings == null){\n                        return;\n                    }\n                    let price = 0.0, currency = \"USD\";\n                    for (i = 0; i < strings.length; i++) {\n                        if(strings.Key == \"Currency\"){\n                            currency = strings.Value;\n                        }\n                        else if(strings.Key == \"Price\"){\n                            price = strings.Value;\n                        }\n                    }\n                    if(currency == \"pylon\"){\n                        price = price * 100;\n                    }\n                    else{\n                        price = price / 100;\n                    }\n                    data = data[coinId];\n                    // console.log(coinStats);\n                    return CoinStats.upsert({last_updated_at:data.last_updated_at}, {$set:data});\n                }\n            }\n            catch(e){ \n                console.log(e);\n            }\n        }\n        else{\n            return \"No coingecko Id provided.\"\n        }\n    },\n    'coinStats.getStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            return (CoinStats.findOne({},{sort:{last_updated_at:-1}}));\n        }\n        else{\n            return \"No coingecko Id provided.\";\n        }\n\n    }\n})","import { Mongo } from 'meteor/mongo';\n\nexport const CoinStats = new Mongo.Collection('coin_stats');\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Cookbooks } from '../cookbooks.js';\nimport { Transactions } from '/imports/api/transactions/transactions.js';\n\nMeteor.methods({\n    'cookbooks.getCookbooks': function() {\n        this.unblock();\n        let transactionsHandle, transactions, transactionsExist;\n        let loading = true;\n        try {  \n\n            if (Meteor.isClient){\n                transactionsHandle = Meteor.subscribe('transactions.validator', props.validator, props.delegator, props.limit);\n                loading = !transactionsHandle.ready();\n            }\n        \n            if (Meteor.isServer || !loading){\n                transactions = Transactions.find({}, {sort:{height:-1}});\n        \n                if (Meteor.isServer){\n                    loading = false;\n                    transactionsExist = !!transactions;\n                }\n                else{\n                    transactionsExist = !loading && !!transactions;\n                }\n            }\n\n            if(!transactionsExist){\n                return false;\n            }\n            let cookbooks = Transactions.find({\n                $or: [\n                    {\"tx.body.messages.@type\":\"/Pylonstech.pylons.pylons.MsgCreateCookbook\"}\n                ]\n            }).fetch().map((p) => p.tx.body.messages[0]);\n            \n            let finishedCookbookIds = new Set(Cookbooks.find({}).fetch().map((p) => p.ID));\n\n            let activeCookbooks = finishedCookbookIds;\n            let cookbookIds = [];\n            if (cookbooks.length > 0) {\n\n                const bulkCookbooks = Cookbooks.rawCollection().initializeUnorderedBulkOp();\n                for (let i in cookbooks) {\n                    let cookbook = cookbooks[i];\n\n                    cookbookIds.push(cookbook.ID);\n                    if (cookbook.NO != -1 && !finishedCookbookIds.has(cookbook.ID)) {\n                        try {\n                            let date = new Date();\n                            cookbook.NO = date.getFullYear() * 1000 * 360 * 24 * 30 * 12 + date.getMonth() * 1000 * 360 * 24 * 30 + date.getDay() * 1000 * 360 * 24 + date.getHours() * 1000 * 360 + date.getMinutes() * 1000 * 60 + date.getSeconds() * 1000 + date.getMilliseconds();\n                            cookbook.cookbookId = cookbook.NO;\n                            if (activeCookbooks.has(cookbook.ID)) {\n                                let validators = []\n                                let page = 0;\n\n                            }\n\n                            bulkCookbooks.find({ ID: cookbook.ID }).upsert().updateOne({ $set: cookbook });\n\n                        } catch (e) {\n                            bulkCookbooks.find({ ID: cookbook.ID }).upsert().updateOne({ $set: cookbook });\n                        }\n                    }\n                }\n\n                bulkCookbooks.find({ ID: { $nin: cookbookIds } })\n                    .update({ $set: { Level: \"0\" } });\n                bulkCookbooks.execute();\n            }\n            return true\n        } catch (e) { \n            console.log(e);\n        }\n    },\n    'cookbooks.getCookbookResults': function() {\n        this.unblock();\n        let cookbooks = Cookbooks.find({}).fetch();\n        if (cookbooks && (cookbooks.length > 0)) {\n            for (let i in cookbooks) {\n                if (cookbooks[i].ID != -1) {\n                    let url = \"\";\n                    try {\n                        let cookbook = { ID: cookbooks[i].ID };\n\n                        //recipe.updatedAt = new Date();\n                        Cookbooks.update({ ID: cookbooks[i].ID }, { $set: cookbook });\n                    } catch (e) {\n                        console.log(url);\n                        console.log(e);\n                    }\n                }\n            }\n        }\n        return true\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { Cookbooks } from '../cookbooks.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('cookbooks.list', function() {\n    return Cookbooks.find({}, { sort: { ID: 1 } });\n});\n\nMeteor.publish('cookbooks.one', function(cookbook_owner) {\n    //check(id, Number);\n    return Cookbooks.find({ Sender: cookbook_owner });\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Cookbooks = new Mongo.Collection('cookbooks');","import { Meteor } from 'meteor/meteor';\nimport { Delegations } from '../delegations.js';\nimport { Validators } from '../../validators/validators.js';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nMeteor.methods({\n    'delegations.getDelegations': async function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let delegations = [];\n        console.log(\"=== Getting delegations ===\");\n        for (v in validators){\n            if (validators[v].operator_address){\n                let url = sanitizeUrl(API + '/cosmos/staking/v1beta1/validators/'+validators[v].operatorAddress+\"/delegations\");\n                try{\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let delegation = JSON.parse(response.content).result;\n                        // console.log(delegation);\n                        delegations = delegations.concat(delegation);\n                    }\n                    else{\n                        console.log(response.statusCode);\n                    }\n                }\n                catch (e){\n                    // console.log(url);\n                    console.log(e);\n                }    \n            }\n        }\n\n        let data = {\n            delegations: delegations,\n            createdAt: new Date(),\n        }\n\n        return Delegations.insert(data);\n    }\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Delegations = new Mongo.Collection('delegations');\n","import { WebApp } from 'meteor/webapp'\nimport { FCMToken } from '../fcmtoken.js'\nimport { admin } from '../../admin.js'\nimport connectRoute from 'connect-route'\nimport { isString } from 'lodash'\n// Global API configuration\n\nconst StatusOk = 200\nconst StatusInvalidInput = 400\nconst Success = 'Success'\nconst Failed = 'Failed'\nconst BadRequest = 'Bad Request'\nconst AppCheckFailed = 'App Check Failed'\n\nWebApp.connectHandlers.use(\n  connectRoute(function (router) {\n    router.post('/fcmtoken/update/:address/:token', async function (req, res) {\n      // validate that params exist\n      if (!Valid(req.params.address) || !Valid(req.params.token)) {\n        res.writeHead(StatusOk, {\n          'Content-Type': 'text/html'\n        })\n\n        res.end(\n          JSON.stringify({\n            Code: StatusInvalidInput,\n            Message: BadRequest,\n            Data: null\n          })\n        )\n      }\n\n      const h = req.headers\n      // app check header check\n      if (!h['x-firebase-appcheck']) {\n        res.writeHead(StatusOk, {\n          'Content-Type': 'text/html'\n        })\n\n        res.end(\n          JSON.stringify({\n            Code: StatusInvalidInput,\n            Message: AppCheckFailed,\n            Data: 'x-firebase-appcheck header missing'\n          })\n        )\n      } else {\n        // performing app check\n        const appCheckClaims = await verifyAppCheckToken(\n          h['x-firebase-appcheck']\n        )\n\n        // app check failed\n        if (!appCheckClaims) {\n          res.writeHead(StatusOk, {\n            'Content-Type': 'text/html'\n          })\n\n          res.end(\n            JSON.stringify({\n              Code: StatusInvalidInput,\n              Message: AppCheckFailed,\n              Data: 'invalid x-firebase-appcheck header'\n            })\n          )\n        }\n\n        const result = updateFCMToken(req.params.address, req.params.token)\n\n        if (result === false) {\n          res.writeHead(400, {\n            'Content-Type': 'text/html'\n          })\n\n          res.end(\n            JSON.stringify({\n              Code: StatusInvalidInput,\n              Message: Failed,\n              Data: null\n            })\n          )\n        }\n\n        res.writeHead(200, {\n          'Content-Type': 'text/html'\n        })\n\n        res.end(\n          JSON.stringify({\n            Code: StatusOk,\n            Message: Success,\n            Data: null\n          })\n        )\n      }\n    })\n  })\n)\n\nfunction updateFCMToken (userAddress, fcmToken) {\n  try {\n    FCMToken.upsert(\n      { address: userAddress },\n      {\n        $set: {\n          address: userAddress,\n          token: fcmToken\n        }\n      }\n    )\n  } catch (error) {\n    console.log(error)\n    return false\n  }\n  return true\n}\n\nfunction Valid (parameter) {\n  if (!isString(parameter)) {\n    return false\n  }\n  if (parameter.length === 0) {\n    return false\n  }\n  return true\n}\n\nasync function verifyAppCheckToken (appCheckToken) {\n  if (!appCheckToken) {\n    return null\n  }\n  try {\n    const res = await admin.appCheck().verifyToken(appCheckToken)\n    return res\n  } catch (err) {\n    return null\n  }\n}\n","import { Mongo } from 'meteor/mongo';\n\nexport const FCMToken = new Mongo.Collection('fcm-token');\n","import { HTTP } from 'meteor/http';\nimport { Validators } from '../../validators/validators';\n\nMeteor.methods({\n    'transaction.submit': function(txInfo) {\n        this.unblock();\n        const url = `${API}/txs`;\n        data = {\n            \"tx\": txInfo.value,\n            \"mode\": \"sync\"\n        }\n        const timestamp = new Date().getTime();\n        console.log(`submitting transaction${timestamp} ${url} with data ${JSON.stringify(data)}`)\n\n        let response = HTTP.post(url, {data}); \n        console.log(`response for transaction${timestamp} ${url}: ${JSON.stringify(response)}`)\n        if (response.statusCode == 200) {\n            let data = response.data\n            if (data.code)\n                throw new Meteor.Error(data.code, JSON.parse(data.raw_log).message)\n            return response.data.txhash;\n        }\n    },\n    'transaction.execute': function(body, path) {\n        this.unblock();\n        const url = `${API}/${path}`;\n        data = {\n            \"base_req\": {\n                ...body,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"simulate\": false\n            }\n        };\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return JSON.parse(response.content);\n        }\n    },\n    'transaction.simulate': function(txMsg, from, accountNumber, sequence, path, adjustment='1.2') {\n        this.unblock();\n        const url = `${API}/${path}`;\n        console.log(txMsg);\n        data = {...txMsg,\n            \"base_req\": {\n                \"from\": from,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"gas_adjustment\": adjustment,\n                \"account_number\": accountNumber,\n                \"sequence\": sequence.toString(),\n                \"simulate\": true\n            }\n        };\n        console.log(url);\n        console.log(data);\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return JSON.parse(response.content).gas_estimate;\n        }\n    },\n    'isValidator': function(address){\n        this.unblock();\n        let validator = Validators.findOne({delegator_address:address})\n        return validator;\n    }\n})","import {Meteor} from \"meteor/meteor\";\nimport {HTTP} from \"meteor/http\";\nimport {Nfts} from \"../nfts.js\";\nimport {Transactions} from \"/imports/api/transactions/transactions.js\";\nimport {sanitizeUrl} from \"@braintree/sanitize-url\";\n\nMeteor.methods({\n  \"nfts.getNfts\": function () {\n    this.unblock();\n\n    let transactionsHandle, transactions, transactionsExist;\n    let loading = true;\n    try {\n      if (Meteor.isClient) {\n        transactionsHandle = Meteor.subscribe(\n          \"transactions.validator\",\n          props.validator,\n          props.delegator,\n          props.limit\n        );\n        loading = !transactionsHandle.ready();\n      }\n\n      if (Meteor.isServer || !loading) {\n        transactions = Transactions.find({}, { sort: { height: -1 } });\n\n        if (Meteor.isServer) {\n          loading = false;\n          transactionsExist = !!transactions;\n        } else {\n          transactionsExist = !loading && !!transactions;\n        }\n      }\n\n      if (!transactionsExist) {\n        return false;\n      }\n      let trades = Transactions.find({\n        $or: [\n          {\n            \"tx.body.messages.@type\":\n              \"/Pylonstech.pylons.pylons.MsgCreateTrade\",\n          },\n        ],\n      })\n        .fetch()\n        .map((p) => p.tx.body.messages[0]);\n\n      if (trades == null || trades.length == 0) {\n        return false;\n      }\n\n      let finishedNftIds = new Set(\n        Nfts.find({})\n          .fetch()\n          .map((p) => p.ID)\n      );\n\n      let nftIds = [];\n\n      if (trades.length > 0) {\n        const bulkNfts = Nfts.rawCollection().initializeUnorderedBulkOp();\n        for (let i in trades) {\n          let trade = trades[i];\n          nftIds.push(trade.itemOutputs[0].itemID);\n\n          if (\n            finishedNftIds.NO != -1 &&\n            !finishedNftIds.has(trade.itemOutputs[0].itemID)\n          ) {\n            try {\n              let response = HTTP.get(\n                  sanitizeUrl(`${Meteor.settings.remote.api}/pylons/executions/item/${trade.itemOutputs[0].cookbookID}/${trade.itemOutputs[0].itemID}`)\n              );\n              let executions = JSON.parse(response.content);\n              let item = executions.CompletedExecutions[0];\n              if (item == undefined || item == null || item.length == 0) {\n                continue;\n              }\n              let date = new Date();\n              item.NO =\n                date.getFullYear() * 1000 * 360 * 24 * 30 * 12 +\n                date.getMonth() * 1000 * 360 * 24 * 30 +\n                date.getDay() * 1000 * 360 * 24 +\n                date.getHours() * 1000 * 360 +\n                date.getMinutes() * 1000 * 60 +\n                date.getSeconds() * 1000 +\n                date.getMilliseconds();\n              item.tradeable = true;\n\n              item.resalelink = sanitizeUrl(`${Meteor.settings.public.baseURL}?action=resell_nft&recipe_id=${item.recipeID}&cookbook_id=${nft.cookbookID}`);\n\n              bulkNfts.find({ ID: item.ID }).upsert().updateOne({ $set: item });\n            } catch (e) {\n            }\n          }\n        }\n\n        bulkNfts\n          .find({ ID: { $nin: nftIds }, tradeable: { $nin: [true, false] } })\n          .update({ $set: { tradeable: true } });\n        bulkNfts.execute();\n      }\n      return true;\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  \"nfts.getNftResults\": function () {\n    this.unblock();\n    let nfts = Nfts.find({ tradeable: { $nin: [true, false] } }).fetch();\n    if (nfts && nfts.length > 0) {\n      for (let i in nfts) {\n        if (nfts[i].ID != -1) {\n          let url = \"\";\n          try {\n            let nft = { ID: nfts[i].ID };\n\n            Nfts.update({ ID: nfts[i].ID }, { $set: nft });\n          } catch (e) {\n            console.log(url);\n            console.log(e);\n          }\n        }\n      }\n    }\n    return true;\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Nfts } from '../nfts.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('nfts.list', function() {\n    return Nfts.find({}, { sort: { ID: 1 } });\n});\n\nMeteor.publish('nfts.one', function(id) {\n    //check(id, Number);\n    return Nfts.find({ ID: id });\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Nfts = new Mongo.Collection('nfts');","import { Meteor } from 'meteor/meteor'\nimport { WebApp } from 'meteor/webapp'\nimport { Notifications } from '../notifications.js'\nimport { FCMToken } from '../../fcmtoken/fcmtoken.js'\nimport { isNumber, isString } from 'lodash'\nimport { sanitizeUrl } from '@braintree/sanitize-url'\nimport { HTTP } from 'meteor/http'\nimport { admin } from '../../admin.js'\nimport connectRoute from 'connect-route'\n\nconst StatusOk = 200\nconst StatusInvalidInput = 400\nconst Success = 'Success'\nconst BadRequest = 'Bad Request'\nconst InvalidID = 'Invalid Notification ID'\nconst AppCheckFailed = 'App Check Failed'\n\nconst Api = new Restivus({\n  useDefaultAuth: true,\n  prettyJson: true\n})\n\nApi.addRoute(\n  'notifications/getAllNotifications/:address/:limit/:offset',\n  { authRequired: false },\n  {\n    get: function () {\n      if (\n        Valid(this.urlParams.address) &&\n        this.urlParams.limit &&\n        this.urlParams.offset\n      ) {\n        try {\n          const res = getNotifications(\n            this.urlParams.address,\n            this.urlParams.limit,\n            this.urlParams.offset\n          )\n          return {\n            Code: StatusOk,\n            Message: Success,\n            Data: { results: res }\n          }\n        } catch (e) {\n          return {\n            Code: StatusInvalidInput,\n            Message: BadRequest,\n            Data: null\n          }\n        }\n      }\n      return {\n        Code: StatusInvalidInput,\n        Message: BadRequest,\n        Data: \"requires params /:address/:limit/:offset\"\n      }\n    }\n  }\n)\n\nWebApp.connectHandlers.use(\n  connectRoute(function (router) {\n    router.post('notifications/markread', async function (req, res) {\n      const h = req.headers\n      const notificationIDs = req.body.notificationIDs\n\n      if (!h['x-firebase-appcheck']) {\n        res.writeHead(StatusOk, {\n          'Content-Type': 'text/html'\n        })\n\n        res.end(\n          JSON.stringify({\n            Code: StatusInvalidInput,\n            Message: AppCheckFailed,\n            Data: 'x-firebase-appcheck header missing'\n          })\n        )\n      } else {\n        if (notificationIDs && notificationIDs.length > 0) {\n          // performing app check\n          const appCheckClaims = await verifyAppCheckToken(\n            h['x-firebase-appcheck']\n          )\n\n          // app check failed\n          if (!appCheckClaims) {\n            res.writeHead(StatusOk, {\n              'Content-Type': 'text/html'\n            })\n\n            res.end(\n              JSON.stringify({\n                Code: StatusInvalidInput,\n                Message: AppCheckFailed,\n                Data: 'invalid x-firebase-appcheck header'\n              })\n            )\n          }\n\n          // app check passed\n          if (notificationIDs && notificationIDs.length > 0) {\n            for (let index = 0; index < notificationIDs.length; index++) {\n              const id = notificationIDs[index]\n\n              // mark as Read\n              const result = markRead(id)\n              if (result !== 1) {\n                res.writeHead(StatusOk, {\n                  'Content-Type': 'text/html'\n                })\n\n                res.end(\n                  JSON.stringify({\n                    Code: StatusInvalidInput,\n                    Message: InvalidID,\n                    Data: `notificationID ${id} is invalid`\n                  })\n                )\n              }\n            }\n\n            // Success\n            res.writeHead(StatusOk, {\n              'Content-Type': 'text/html'\n            })\n\n            res.end(\n              JSON.stringify({\n                Code: StatusOk,\n                Message: Success,\n                Data: 'notifications marked as Read'\n              })\n            )\n          }\n        }\n\n        // invalid request\n        res.writeHead(StatusOk, {\n          'Content-Type': 'text/html'\n        })\n\n        res.end(\n          JSON.stringify({\n            Code: StatusInvalidInput,\n            Message: BadRequest,\n            Data: 'notificationIDs list is missing or corrupt'\n          })\n        )\n      }\n    })\n  })\n)\n\nMeteor.methods({\n  //send un settled notifications\n  \"Notifications.sendPushNotifications\": function () {\n    this.unblock();\n\n    const unSettled = Notifications.find({ settled: false })\n \n    unSettled\n      .forEach((sale) => {\n        var sellerAddress = sale.from;\n        var saleID = sale._id;\n        var token;      \n        //get Firebase token for specified user address\n        try{\n          token = FCMToken.findOne({ address: sellerAddress }).token\n        }catch(e){\n          return e\n        } \n        \n        const buyerUserName = getUserNameInfo(sale.to).username.value;\n        const message = {\n          notification: {\n            title: \"NFT Sold\",\n            body: `Your NFT ${sale.item_name} has been sold to ${buyerUserName}`,\n          },\n          data : {\n            type : \"NFT Sold\"\n          }\n\n        };\n        \n        const options = {\n          priority: \"high\",\n          timeToLive: 86400,\n        };\n        \n      \n        if (Meteor.settings.params.sendNotifications === 1) {\n          admin\n            .messaging()\n            .sendToDevice(token, message, options)\n            .then((n) => {\n              markSent(saleID)\n              console.log(n)\n            })\n            .catch((e) => {\n              console.log('Notification not sent to ', token)\n              console.log(e)\n            })\n        }\n    })\n  }\n})\n\nfunction Valid (parameter) {\n  if (!isString(parameter)) {\n    return false\n  }\n  if (parameter.length === 0) {\n    return false\n  }\n  return true\n}\n\nfunction markRead (id) {\n  return Notifications.update({ _id: id }, { $set: { read: true } })\n}\n\nfunction markSent (id) {\n  Notifications.update({ _id: id }, { $set: { settled: true } })\n  return Notifications.update({ _id: id }, { $set: { settled: true } })\n}\nfunction getNotifications (address, limit, offset) {\n  return Notifications.find(\n    { from: address },\n    {\n      sort:{created_at:-1},\n      limit: parseInt(limit),\n      skip: parseInt(offset)\n    }\n  ).fetch()\n}\n\nfunction getUserNameInfo (address) {\n  let result\n  const url = sanitizeUrl(\n    `${Meteor.settings.remote.api}/pylons/account/address/${address}`\n  )\n  try {\n    const response = HTTP.get(url)\n    result = JSON.parse(response.content)\n  } catch (e) {\n    console.log('error getting userNameInfo: ', e)\n  }\n  return result\n}\n\nasync function verifyAppCheckToken (appCheckToken) {\n  if (!appCheckToken) {\n    return null\n  }\n  try {\n    const res = await admin.appCheck().verifyToken(appCheckToken)\n    return res\n  } catch (err) {\n    return null\n  }\n}\n","import { Mongo } from \"meteor/mongo\";\n\n\nexport const Notifications = new Mongo.Collection(\"notifications\");\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Proposals } from '../proposals.js';\nimport { Chain } from '../../chain/chain.js';\nimport { Validators } from '../../validators/validators.js';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nMeteor.methods({\n    'proposals.getProposals': function(){\n        this.unblock();\n\n        // get gov tally prarams\n        let url = sanitizeUrl(API + '/cosmos/gov/v1beta1/params/tallying');\n        try{\n            let response = HTTP.get(url);\n            let params = JSON.parse(response.content);\n\n            Chain.update({chainId: Meteor.settings.public.chainId}, {$set:{\"gov.tally_params\":params.tally_params}});\n\n            url = sanitizeUrl(API + '/cosmos/gov/v1beta1/proposals');\n            response = HTTP.get(url);\n            let proposals = JSON.parse(response.content).proposals;\n            // console.log(proposals);\n\n            let finishedProposalIds = new Set(Proposals.find(\n                {\"status\":{$in:[\"PROPOSAL_STATUS_PASSED\", \"PROPOSAL_STATUS_REJECTED\", \"PROPOSAL_STATUS_REMOVED\"]}}\n            ).fetch().map((p)=> p.proposalId)); \n\n            let activeProposals = new Set(Proposals.find(\n                { \"status\": { $in: [\"PROPOSAL_STATUS_VOTING_PERIOD\"] } }\n            ).fetch().map((p) => p.proposalId));\n            let proposalIds = [];\n            if (proposals.length > 0){\n                // Proposals.upsert()\n                const bulkProposals = Proposals.rawCollection().initializeUnorderedBulkOp();\n                for (let i in proposals){\n                    let proposal = proposals[i];\n                    proposal.proposalId = parseInt(proposal.proposal_id);\n                    proposalIds.push(proposal.proposalId);\n                    if (proposal.proposalId > 0 && !finishedProposalIds.has(proposal.proposalId)) {\n                        try{\n                            url = sanitizeUrl(API + '/gov/proposals/'+proposal.proposalId+'/proposer');\n                            let response = HTTP.get(url);\n                            if (response.statusCode == 200){\n                                let proposer = JSON.parse(response?.content)?.result;\n                                if (proposer.proposal_id && (parseInt(proposer.proposal_id) == proposal.proposalId)){\n                                    proposal.proposer = proposer?.proposer;\n                                }\n                            }\n                            if (activeProposals.has(proposal.proposalId)){\n                                let validators = []\n                                let page = 0;\n\n                                do {\n                                    url = sanitizeUrl(RPC + `/validators?page=${++page}&per_page=100`);\n                                    let response = HTTP.get(url);\n                                    result = JSON.parse(response.content).result;\n                                    validators = [...validators, ...result.validators];\n\n                                }\n                                while (validators.length < parseInt(result.total))\n\n                                let activeVotingPower = 0;\n                                for (v in validators) {\n                                    activeVotingPower += parseInt(validators[v].voting_power);\n                                }\n                                proposal.activeVotingPower = activeVotingPower;\n                            }\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                        }\n                        catch (e) {\n                            bulkProposals.find({proposalId:proposal.proposalId}).upsert().updateOne({ $set: proposal});\n                            console.log(url);\n                            console.log(e.response.content);\n                        }\n                    }\n                }\n                bulkProposals.find({proposalId:{$nin:proposalIds}, status:{$nin:[\"PROPOSAL_STATUS_VOTING_PERIOD\", \"PROPOSAL_STATUS_PASSED\", \"PROPOSAL_STATUS_REJECTED\", \"PROPOSAL_STATUS_REMOVED\"]}})\n                    .update({$set: {\"status\": \"PROPOSAL_STATUS_REMOVED\"}});\n                bulkProposals.execute();\n            }\n            return true\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'proposals.getProposalResults': function(){\n        this.unblock();\n        let proposals = Proposals.find({\"status\":{$nin:[\"PROPOSAL_STATUS_PASSED\", \"PROPOSAL_STATUS_REJECTED\", \"PROPOSAL_STATUS_REMOVED\"]}}).fetch();\n\n        if (proposals && (proposals.length > 0)){\n            for (let i in proposals){\n                if (parseInt(proposals[i].proposalId) > 0){\n                    let url = \"\";\n                    try{\n                        // get proposal deposits\n                        url = API + sanitizeUrl('/cosmos/gov/v1beta1/proposals/'+proposals[i].proposalId+'/deposits?pagination.limit=2000&pagination.count_total=true');\n                        let response = HTTP.get(url);\n                        let proposal = {proposalId: proposals[i].proposalId};\n                        if (response.statusCode == 200){\n                            let deposits = JSON.parse(response.content).deposits;\n                            proposal.deposits = deposits;\n                        }\n\n                        url = sanitizeUrl(API + '/cosmos/gov/v1beta1/proposals/'+proposals[i].proposalId+'/votes?pagination.limit=2000&pagination.count_total=true');\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let votes = JSON.parse(response.content).votes;\n                            proposal.votes = getVoteDetail(votes);\n                        }\n\n                        url = sanitizeUrl(API + '/cosmos/gov/v1beta1/proposals/'+proposals[i].proposalId+'/tally');\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let tally = JSON.parse(response.content).tally;\n                            proposal.tally = tally;\n                        }\n\n                        proposal.updatedAt = new Date();\n                        Proposals.update({proposalId: proposals[i].proposalId}, {$set:proposal});\n                    }\n                    catch(e){\n                        console.log(url);\n                        console.log(e);\n                    }\n                }\n            }\n        }\n        return true\n    }\n})\n\nconst getVoteDetail = (votes) => {\n    if (!votes) {\n        return [];\n    }\n\n    let voters = votes.map((vote) => vote.voter);\n    let votingPowerMap = {};\n    let validatorAddressMap = {};\n    Validators.find({delegator_address: {$in: voters}}).forEach((validator) => {\n        votingPowerMap[validator.delegator_address] = {\n            moniker: validator.description.moniker,\n            address: validator.address,\n            tokens: parseFloat(validator.tokens),\n            delegatorShares: parseFloat(validator.delegator_shares),\n            deductedShares: parseFloat(validator.delegator_shares)\n        }\n        validatorAddressMap[validator.operator_address] = validator.delegator_address;\n    });\n    voters.forEach((voter) => {\n        if (!votingPowerMap[voter]) {\n            // voter is not a validator\n            let url = sanitizeUrl(`${API}/cosmos/staking/v1beta1/delegations/${voter}`);\n            let delegations;\n            let votingPower = 0;\n            try{\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    delegations = JSON.parse(response.content).delegation_responses;\n                    if (delegations && delegations.length > 0) {\n                        delegations.forEach((delegation) => {\n                            let shares = parseFloat(delegation.delegation.shares);\n                            if (validatorAddressMap[delegation.delegation.validator_address]) {\n                                // deduct delegated shareds from validator if a delegator votes\n                                let validator = votingPowerMap[validatorAddressMap[delegation.delegation.validator_address]];\n                                validator.deductedShares -= shares;\n                                if (parseFloat(validator.delegatorShares) != 0){ // avoiding division by zero\n                                    votingPower += (shares / parseFloat(validator.delegatorShares)) * parseFloat(validator.tokens);\n                                }\n\n                            } else {\n                                votingPower += shares\n                            }\n                        });\n                    }\n                }\n            }\n            catch (e){\n                console.log(url);\n                console.log(e);\n            }\n            votingPowerMap[voter] = {votingPower: votingPower};\n        }\n    });\n    return votes.map((vote) => {\n        let voter = votingPowerMap[vote.voter];\n        let votingPower = voter.votingPower;\n        if (votingPower == undefined) {\n            // voter is a validator\n            votingPower = voter.delegatorShares?((parseFloat(voter.deductedShares) / parseFloat(voter.delegatorShares)) * parseFloat(voter.tokens)):0;\n        }\n        return {...vote, votingPower};\n    });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Proposals } from '../proposals.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('proposals.list', function () {\n    return Proposals.find({}, {sort:{proposalId:-1}});\n});\n\nMeteor.publish('proposals.one', function (id){\n    check(id, Number);\n    return Proposals.find({proposalId:id});\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Proposals = new Mongo.Collection('proposals');\n","import { Meteor } from \"meteor/meteor\";\nimport { HTTP } from \"meteor/http\";\nimport { Recipes } from \"../recipes.js\";\nimport { Transactions } from \"/imports/api/transactions/transactions.js\";\nimport { Cookbooks } from \"/imports/api/cookbooks/cookbooks.js\";\nimport { sanitizeUrl } from \"@braintree/sanitize-url\";\n\nMeteor.methods({\n  \"recipes.getRecipes\": function () {\n    this.unblock();\n\n    let transactionsHandle, transactions, transactionsExist;\n    let loading = true;\n\n    try {\n      if (Meteor.isClient) {\n        transactionsHandle = Meteor.subscribe(\n          \"transactions.validator\",\n          props.validator,\n          props.delegator,\n          props.limit\n        );\n        loading = !transactionsHandle.ready();\n      }\n\n      if (Meteor.isServer || !loading) {\n        transactions = Transactions.find({}, { sort: { height: -1 } });\n\n        if (Meteor.isServer) {\n          loading = false;\n          transactionsExist = !!transactions;\n        } else {\n          transactionsExist = !loading && !!transactions;\n        }\n      }\n\n      let url = sanitizeUrl(API + \"/pylons/recipes/\");\n      let response = HTTP.get(url);\n      let recipes = JSON.parse(response.content).recipes;\n\n      if (recipes == null || recipes.length == 0) {\n        return false;\n      }\n\n      let finishedRecipeIds = new Set(\n        Recipes.find({ enabled: { $in: [true, false] } })\n          .fetch()\n          .map((p) => p.ID)\n      );\n\n      let recipeIds = [];\n      if (recipes.length > 0) {\n        const bulkRecipes = Recipes.rawCollection().initializeUnorderedBulkOp();\n\n        for (let i in recipes) {\n          let recipe = recipes[i];\n          let deeplink = sanitizeUrl(\n            Meteor.settings.public.baseURL +\n            \"?recipe_id=\" +\n            recipe.id +\n            \"&cookbook_id=\" +\n            recipe.cookbook_id);\n          recipe.deeplink = deeplink;\n          var cookbook_owner = \"\",\n            creator = \"\";\n          try {\n            let cookbooks = Cookbooks.find({ ID: recipe.cookbook_id }).fetch();\n            if (cookbooks.length > 0) {\n              cookbook_owner = recipe.id;\n              creator = cookbooks[0].creator;\n            }\n          } catch (e) {\n            console.log(e);\n          }\n          recipe.cookbook_owner = cookbook_owner;\n          recipe.creator = creator;\n\n          recipeIds.push(recipe.id);\n          if (recipe.NO != -1 && !finishedRecipeIds.has(recipe.id)) {\n            try {\n              let date = new Date();\n              recipe.NO =\n                date.getFullYear() * 1000 * 360 * 24 * 30 * 12 +\n                date.getMonth() * 1000 * 360 * 24 * 30 +\n                date.getDay() * 1000 * 360 * 24 +\n                date.getHours() * 1000 * 360 +\n                date.getMinutes() * 1000 * 60 +\n                date.getSeconds() * 1000 +\n                date.getMilliseconds();\n              recipe.recipeId = recipe.NO;\n              bulkRecipes\n                .find({ ID: recipe.id })\n                .upsert()\n                .updateOne({ $set: recipe });\n            } catch (e) {\n              bulkRecipes\n                .find({ ID: recipe.id })\n                .upsert()\n                .updateOne({ $set: recipe });\n            }\n          }\n        }\n\n        bulkRecipes\n          .find({ ID: { $nin: recipeIds }, enabled: { $nin: [true, false] } })\n          .update({ $set: { enabled: true } });\n        bulkRecipes.execute();\n      }\n      return recipes;\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  \"recipes.getRecipeResults\": function () {\n    this.unblock();\n    let recipes = Recipes.find({ enabled: { $nin: [true, false] } }).fetch();\n    if (recipes && recipes.length > 0) {\n      for (let i in recipes) {\n        if (recipes[i].id != -1) {\n          let url = \"\";\n          try {\n            let recipe = { ID: recipes[i].id };\n            Recipes.update({ ID: recipes[i].id }, { $set: recipe });\n          } catch (e) {\n            console.log(url);\n            console.log(e);\n          }\n        }\n      }\n    }\n    return true;\n  },\n});","import { Meteor } from 'meteor/meteor';\nimport { Recipes } from '../recipes.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('recipes.list', function() {\n    return Recipes.find({}, { sort: { ID: 1 } });\n});\n\nMeteor.publish('recipes.one', function(id) {\n    //check(id, Number);\n    return Recipes.find({ ID: id });\n})\n\nMeteor.publish('recipes', function() {\n    return Recipes.find();\n});","import { Mongo } from 'meteor/mongo';\n\nexport const Recipes = new Mongo.Collection('recipes');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords, Analytics, AverageData, AverageValidatorData } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Status } from '../../status/status.js';\nimport { MissedBlocksStats } from '../records.js';\nimport { MissedBlocks } from '../records.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Chain } from '../../chain/chain.js';\nimport _ from 'lodash';\nconst BULKUPDATEMAXSIZE = 1000;\n\nconst getBlockStats = (startHeight, latestHeight) => {\n    let blockStats = {};\n    const cond = {$and: [\n        { height: { $gt: startHeight } },\n        { height: { $lte: latestHeight } } ]};\n    const options = {sort:{height: 1}};\n    Blockscon.find(cond, options).forEach((block) => {\n        blockStats[block.height] = {\n            height: block.height,\n            proposerAddress: block.proposerAddress,\n            precommitsCount: block.precommitsCount,\n            validatorsCount: block.validatorsCount,\n            validators: block.validators,\n            time: block.time\n        }\n    });\n\n    Analytics.find(cond, options).forEach((block) => {\n        if (!blockStats[block.height]) {\n            blockStats[block.height] = { height: block.height };\n            console.log(`block ${block.height} does not have an entry`);\n        }\n        _.assign(blockStats[block.height], {\n            precommits: block.precommits,\n            averageBlockTime: block.averageBlockTime,\n            timeDiff: block.timeDiff,\n            voting_power: block.voting_power\n        });\n    });\n    return blockStats;\n}\n\nconst getPreviousRecord = (voterAddress, proposerAddress) => {\n    let previousRecord = MissedBlocks.findOne(\n        {voter:voterAddress, proposer:proposerAddress, blockHeight: -1});\n    let lastUpdatedHeight = Meteor.settings.params.startHeight;\n    let prevStats = {};\n    if (previousRecord) {\n        prevStats = _.pick(previousRecord, ['missCount', 'totalCount']);\n    } else {\n        prevStats = {\n            missCount: 0,\n            totalCount: 0\n        }\n    }\n    return prevStats;\n}\n\nMeteor.methods({\n    'ValidatorRecords.calculateMissedBlocks': function(){\n        this.unblock();\n        if (!COUNTMISSEDBLOCKS){\n            try {\n                let startTime = Date.now();\n                COUNTMISSEDBLOCKS = true;\n                console.log('calulate missed blocks count');\n                this.unblock();\n                let validators = Validators.find({}).fetch();\n                let latestHeight = Meteor.call('blocks.getCurrentHeight');\n                let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n                let startHeight = (explorerStatus&&explorerStatus.lastProcessedMissedBlockHeight)?explorerStatus.lastProcessedMissedBlockHeight:Meteor.settings.params.startHeight;\n                latestHeight = Math.min(startHeight + BULKUPDATEMAXSIZE, latestHeight);\n                const bulkMissedStats = MissedBlocks.rawCollection().initializeOrderedBulkOp();\n\n                let validatorsMap = {};\n                validators.forEach((validator) => validatorsMap[validator.address] = validator);\n\n                // a map of block height to block stats\n                let blockStats = getBlockStats(startHeight, latestHeight);\n\n                // proposerVoterStats is a proposer-voter map counting numbers of proposed blocks of which voter is an active validator\n                let proposerVoterStats = {}\n\n                _.forEach(blockStats, (block, blockHeight) => {\n                    let proposerAddress = block.proposerAddress;\n                    let votedValidators = new Set(block.validators);\n                    let validatorSets = ValidatorSets.findOne({block_height:block.height});\n                    let votedVotingPower = 0;\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        if (votedValidators.has(activeValidator.address))\n                            votedVotingPower += parseFloat(activeValidator.voting_power)\n                    })\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        let currentValidator = activeValidator.address\n                        if (!_.has(proposerVoterStats, [proposerAddress, currentValidator])) {\n                            let prevStats = getPreviousRecord(currentValidator, proposerAddress);\n                            _.set(proposerVoterStats, [proposerAddress, currentValidator], prevStats);\n                        }\n\n                        _.update(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'], (n) => n+1);\n                        if (!votedValidators.has(currentValidator)) {\n                            _.update(proposerVoterStats, [proposerAddress, currentValidator, 'missCount'], (n) => n+1);\n                            bulkMissedStats.insert({\n                                voter: currentValidator,\n                                blockHeight: block.height,\n                                proposer: proposerAddress,\n                                precommitsCount: block.precommitsCount,\n                                validatorsCount: block.validatorsCount,\n                                time: block.time,\n                                precommits: block.precommits,\n                                averageBlockTime: block.averageBlockTime,\n                                timeDiff: block.timeDiff,\n                                votingPower: block.voting_power,\n                                votedVotingPower,\n                                updatedAt: latestHeight,\n                                missCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'missCount']),\n                                totalCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'])\n                            });\n                        }\n                    })\n                });\n\n                _.forEach(proposerVoterStats, (voters, proposerAddress) => {\n                    _.forEach(voters, (stats, voterAddress) => {\n                        bulkMissedStats.find({\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1\n                        }).upsert().updateOne({$set: {\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1,\n                            updatedAt: latestHeight,\n                            missCount: _.get(stats, 'missCount'),\n                            totalCount: _.get(stats, 'totalCount')\n                        }});\n                    });\n                });\n\n                let message = '';\n                if (bulkMissedStats.length > 0){\n                    const client = MissedBlocks._driver.mongo.client;\n                    // TODO: add transaction back after replica set(#146) is set up\n                    // let session = client.startSession();\n                    // session.startTransaction();\n                    let bulkPromise = bulkMissedStats.execute(null/*, {session}*/).then(\n                        Meteor.bindEnvironment((result, err) => {\n                            if (err){\n                                COUNTMISSEDBLOCKS = false;\n                                // Promise.await(session.abortTransaction());\n                                throw err;\n                            }\n                            if (result){\n                                // Promise.await(session.commitTransaction());\n                                message = `(${result.result.nInserted} inserted, ` +\n                                           `${result.result.nUpserted} upserted, ` +\n                                           `${result.result.nModified} modified)`;\n                            }\n                        }));\n\n                    Promise.await(bulkPromise);\n                }\n\n                COUNTMISSEDBLOCKS = false;\n                Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastProcessedMissedBlockHeight:latestHeight, lastProcessedMissedBlockTime: new Date()}});\n                return `done in ${Date.now() - startTime}ms ${message}`;\n            } catch (e) {\n                COUNTMISSEDBLOCKS = false;\n                throw e;\n            }\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'ValidatorRecords.calculateMissedBlocksStats': function(){\n        this.unblock();\n        // TODO: deprecate this method and MissedBlocksStats collection\n        // console.log(\"ValidatorRecords.calculateMissedBlocks: \"+COUNTMISSEDBLOCKS);\n        if (!COUNTMISSEDBLOCKSSTATS){\n            COUNTMISSEDBLOCKSSTATS = true;\n            console.log('calulate missed blocks stats');\n            this.unblock();\n            let validators = Validators.find({}).fetch();\n            let latestHeight = Meteor.call('blocks.getCurrentHeight');\n            let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n            let startHeight = (explorerStatus&&explorerStatus.lastMissedBlockHeight)?explorerStatus.lastMissedBlockHeight:Meteor.settings.params.startHeight;\n            // console.log(latestHeight);\n            // console.log(startHeight);\n            const bulkMissedStats = MissedBlocksStats.rawCollection().initializeUnorderedBulkOp();\n            for (i in validators){\n                // if ((validators[i].address == \"B8552EAC0D123A6BF609123047A5181D45EE90B5\") || (validators[i].address == \"69D99B2C66043ACBEAA8447525C356AFC6408E0C\") || (validators[i].address == \"35AD7A2CD2FC71711A675830EC1158082273D457\")){\n                let voterAddress = validators[i].address;\n                let missedRecords = ValidatorRecords.find({\n                    address:voterAddress,\n                    exists:false,\n                    $and: [ { height: { $gt: startHeight } }, { height: { $lte: latestHeight } } ]\n                }).fetch();\n\n                let counts = {};\n\n                // console.log(\"missedRecords to process: \"+missedRecords.length);\n                for (b in missedRecords){\n                    let block = Blockscon.findOne({height:missedRecords[b].height});\n                    let existingRecord = MissedBlocksStats.findOne({voter:voterAddress, proposer:block.proposerAddress});\n\n                    if (typeof counts[block.proposerAddress] === 'undefined'){\n                        if (existingRecord){\n                            counts[block.proposerAddress] = existingRecord.count+1;\n                        }\n                        else{\n                            counts[block.proposerAddress] = 1;\n                        }\n                    }\n                    else{\n                        counts[block.proposerAddress]++;\n                    }\n                }\n\n                for (address in counts){\n                    let data = {\n                        voter: voterAddress,\n                        proposer:address,\n                        count: counts[address]\n                    }\n\n                    bulkMissedStats.find({voter:voterAddress, proposer:address}).upsert().updateOne({$set:data});\n                }\n                // }\n\n            }\n\n            if (bulkMissedStats.length > 0){\n                bulkMissedStats.execute(Meteor.bindEnvironment((err, result) => {\n                    if (err){\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(err);\n                    }\n                    if (result){\n                        Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastMissedBlockHeight:latestHeight, lastMissedBlockTime: new Date()}});\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(\"done\");\n                    }\n                }));\n            }\n            else{\n                COUNTMISSEDBLOCKSSTATS = false;\n            }\n\n            return true;\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'Analytics.aggregateBlockTimeAndVotingPower': function(time){\n        this.unblock();\n        let now = new Date();\n\n        if (time == 'm'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastMinuteVotingPower:averageVotingPower, lastMinuteBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n        if (time == 'h'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastHourVotingPower:averageVotingPower, lastHourBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        if (time == 'd'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastDayVotingPower:averageVotingPower, lastDayBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        // return analytics.length;\n    },\n    'Analytics.aggregateValidatorDailyBlockTime': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let now = new Date();\n        for (i in validators){\n            let averageBlockTime = 0;\n\n            let blocks = Blockscon.find({proposerAddress:validators[i].address, \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) }}, {fields:{height:1}}).fetch();\n\n            if (blocks.length > 0){\n                let blockHeights = [];\n                for (b in blocks){\n                    blockHeights.push(blocks[b].height);\n                }\n\n                let analytics = Analytics.find({height: {$in:blockHeights}}, {fields:{height:1,timeDiff:1}}).fetch();\n\n\n                for (a in analytics){\n                    averageBlockTime += analytics[a].timeDiff;\n                }\n\n                averageBlockTime = averageBlockTime / analytics.length;\n            }\n\n            AverageValidatorData.insert({\n                proposerAddress: validators[i].address,\n                averageBlockTime: averageBlockTime,\n                type: 'ValidatorDailyAverageBlockTime',\n                createdAt: now\n            })\n        }\n\n        return true;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatorRecords, Analytics, MissedBlocks, MissedBlocksStats, VPDistributions } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('validator_records.all', function () {\n    return ValidatorRecords.find();\n});\n\nMeteor.publish('validator_records.uptime', function(address, num){\n    return ValidatorRecords.find({address:address},{limit:num, sort:{height:-1}});\n});\n\nMeteor.publish('analytics.history', function(){\n    return Analytics.find({},{sort:{height:-1},limit:50});\n});\n\nMeteor.publish('vpDistribution.latest', function(){\n    return VPDistributions.find({},{sort:{height:-1}, limit:1});\n});\n\npublishComposite('missedblocks.validator', function(address, type){\n    let conditions = {};\n    if (type == 'voter'){\n        conditions = {\n            voter: address\n        }\n    }\n    else{\n        conditions = {\n            proposer: address\n        }\n    }\n    return {\n        find(){\n            return MissedBlocksStats.find(conditions)\n        },\n        children: [\n            {\n                find(stats){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, profile_url:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('missedrecords.validator', function(address, type){\n    return {\n        find(){\n            return MissedBlocks.find(\n                {[type]: address},\n                {sort: {updatedAt: -1}}\n            )\n        },\n        children: [\n            {\n                find(){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, operatorAddress:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators';\n\nexport const ValidatorRecords = new Mongo.Collection('validator_records');\nexport const Analytics = new Mongo.Collection('analytics');\nexport const MissedBlocksStats = new Mongo.Collection('missed_blocks_stats');\nexport const MissedBlocks = new  Mongo.Collection('missed_blocks');\nexport const VPDistributions = new Mongo.Collection('voting_power_distributions');\nexport const AverageData = new Mongo.Collection('average_data');\nexport const AverageValidatorData = new Mongo.Collection('average_validator_data');\n\nMissedBlocksStats.helpers({\n    proposerMoniker(){\n        let validator = Validators.findOne({address:this.proposer});\n        return (validator.description)?validator.description.moniker:this.proposer;\n    },\n    voterMoniker(){\n        let validator = Validators.findOne({address:this.voter});\n        return (validator.description)?validator.description.moniker:this.voter;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Status } from '../status.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('status.status', function () {\n    return Status.find({chainId:Meteor.settings.public.chainId});\n});\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Status = new Mongo.Collection('status');","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Validators } from '../../validators/validators.js';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nconst AddressLength = 40;\n\nMeteor.methods({\n    'Transactions.updateTransactions': async function(){\n        this.unblock();\n        if (TXSYNCING)\n            return \"Syncing transactions...\";\n\n        const transactions = Transactions.find({processed:false},{limit: 500}).fetch();\n        try{\n            TXSYNCING = true;\n            const bulkTransactions = Transactions.rawCollection().initializeUnorderedBulkOp();\n            for (let i in transactions){\n                let url = \"\";\n                try {\n                    url = sanitizeUrl(API+ '/cosmos/tx/v1beta1/txs/'+transactions[i].txhash);\n                    let response = HTTP.get(url);\n                    let tx = JSON.parse(response.content);\n\n                    tx.height = parseInt(tx.tx_response.height);\n                    tx.processed = true;\n\n                    bulkTransactions.find({txhash:transactions[i].txhash}).updateOne({$set:tx});\n\n                }\n                catch(e) {\n                    // console.log(url);\n                    // console.log(\"tx not found: %o\")\n                    console.log(\"Getting transaction %o: %o\", transactions[i].txhash, e);\n                    bulkTransactions.find({txhash:transactions[i].txhash}).updateOne({$set:{processed:true, missing:true}});                    \n                }\n            }\n            if (bulkTransactions.length > 0){\n                console.log(\"aaa: %o\",bulkTransactions.length)\n                bulkTransactions.execute((err, result) => {\n                    if (err){\n                        console.log(err);\n                    }\n                    if (result){\n                        console.log(result);\n                    }\n                });\n            }\n        }\n        catch (e) {\n            TXSYNCING = false;\n            return e\n        }\n        TXSYNCING = false;\n        return transactions.length\n    },\n    'Transactions.findDelegation': function(address, height){\n        this.unblock();\n        // following cosmos-sdk/x/slashing/spec/06_events.md and cosmos-sdk/x/staking/spec/06_events.md\n        return Transactions.find({\n            $or: [{$and: [\n                {\"tx_response.logs.events.type\": \"delegate\"},\n                {\"tx_response.logs.events.attributes.key\": \"validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.attributes.key\": \"action\"},\n                {\"tx_response.logs.events.attributes.value\": \"unjail\"},\n                {\"tx_response.logs.events.attributes.key\": \"sender\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.type\": \"create_validator\"},\n                {\"tx_response.logs.events.attributes.key\": \"validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.type\": \"unbond\"},\n                {\"tx_response.logs.events.attributes.key\": \"validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.type\": \"redelegate\"},\n                {\"tx_response.logs.events.attributes.key\": \"destination_validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}],\n            \"tx_response.code\": 0,\n            height:{$lt:height}},\n        {sort:{height:-1},\n            limit: 1}\n        ).fetch();\n    },\n    'Transactions.findUser': function(address, fields=null){\n        this.unblock();\n        // address is either delegator address or validator operator address\n        let validator;\n        if (!fields)\n            fields = {address:1, description:1, operator_address:1, delegator_address:1};\n        if (address.includes(Meteor.settings.public.bech32PrefixValAddr)){\n            // validator operator address\n            validator = Validators.findOne({operator_address:address}, {fields});\n        }\n        else if (address.includes(Meteor.settings.public.bech32PrefixAccAddr)){\n            // delegator address\n            validator = Validators.findOne({delegator_address:address}, {fields});\n        }\n        else if (address.length === AddressLength) {\n            validator = Validators.findOne({address:address}, {fields});\n        }\n        if (validator){\n            return validator;\n        }\n        return false;\n\n    }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Transactions } from \"../transactions.js\";\nimport { Blockscon } from \"../../blocks/blocks.js\";\n\npublishComposite(\"transactions.list\", function (limit = 30) {\n  return {\n    find() {\n      return Transactions.find(\n        { height: { $exists: true }, processed: { $ne: false } },\n        { sort: { height: -1 }, limit: limit }\n      );\n    },\n    children: [\n      {\n        find(tx) {\n          if (tx.height)\n            return Blockscon.find(\n              { height: tx.height },\n              { fields: { time: 1, height: 1 } }\n            );\n        },\n      },\n    ],\n  };\n});\n\npublishComposite(\"transactions.validlist\", function (limit = 30) {\n  console.log(\"hello welcome to transactions\");\n  var needTransactions = [\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgCreateAccount\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgCreateRecipe\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgCreateCookbook\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgUpdateCookbook\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgCreateTrade\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgExecuteRecipe\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgFulfillTrade\" },\n    { \"tx.body.messages.@type\": \"/pylons.pylons.MsgCancelTrade\" },\n  ];\n  return {\n    find() {\n      return Transactions.find(\n        { $or: needTransactions },\n        { height: { $exists: true }, processed: { $ne: false } },\n        { sort: { height: -1 }, limit: limit }\n      );\n    },\n    children: [\n      {\n        find(tx) {\n          if (tx.height)\n            return Blockscon.find(\n              { height: tx.height },\n              { fields: { time: 1, height: 1 } }\n            );\n        },\n      },\n    ],\n  };\n});\n\npublishComposite(\n  \"transactions.validator\",\n  function (validatorAddress, delegatorAddress, limit = 100) {\n    let query = {};\n    if (validatorAddress && delegatorAddress) {\n      query = {\n        $or: [\n          { \"tx_response.logs.events.attributes.value\": validatorAddress },\n          { \"tx_response.logs.events.attributes.value\": delegatorAddress },\n        ],\n      };\n    }\n\n    if (!validatorAddress && delegatorAddress) {\n      query = { \"tx_response.logs.events.attributes.value\": delegatorAddress };\n    }\n\n    return {\n      find() {\n        return Transactions.find(query, { sort: { height: -1 }, limit: limit });\n      },\n      children: [\n        {\n          find(tx) {\n            return Blockscon.find(\n              { height: tx.height },\n              { fields: { time: 1, height: 1 } }\n            );\n          },\n        },\n      ],\n    };\n  }\n);\n\npublishComposite(\"transactions.findOne\", function (hash) {\n  return {\n    find() {\n      return Transactions.find({ txhash: hash });\n    },\n    children: [\n      {\n        find(tx) {\n          return Blockscon.find(\n            { height: tx.height },\n            { fields: { time: 1, height: 1 } }\n          );\n        },\n      },\n    ],\n  };\n});\n\npublishComposite(\"transactions.height\", function (height) {\n  return {\n    find() {\n      return Transactions.find({ height: height });\n    },\n    children: [\n      {\n        find(tx) {\n          return Blockscon.find(\n            { height: tx.height },\n            { fields: { time: 1, height: 1 } }\n          );\n        },\n      },\n    ],\n  };\n});\n","import { Mongo } from 'meteor/mongo'\nimport { Blockscon } from '../blocks/blocks.js'\n\nexport const Transactions = new Mongo.Collection('transactions')\n\nTransactions.helpers({\n  block() {\n    return Blockscon.findOne({ height: this.height })\n  }\n})\n","/* eslint-disable camelcase */\n\nimport { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Chain } from '../../chain/chain.js';\nimport { getValidatorProfileUrl } from '../../blocks/server/methods.js';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\n\nMeteor.methods({\n    'Validators.findCreateValidatorTime': function(address){\n        this.unblock();\n        // look up the create validator time to consider if the validator has never updated the commission\n        let tx = Transactions.findOne({$and:[\n            {\"tx.body.messages.delegator_address\":address},\n            {\"tx.body.messages.@type\":\"/cosmos.staking.v1beta1.MsgCreateValidator\"},\n            {\"tx_response.code\":0}\n        ]});\n\n        if (tx){\n            let block = Blockscon.findOne({height:tx.height});\n            if (block){\n                return block.time;\n            }\n        }\n        else{\n            // no such create validator tx\n            return false;\n        }\n    },\n    'Validators.getAllDelegations'(address){\n        this.unblock();\n        let url = sanitizeUrl(`${API}/cosmos/staking/v1beta1/validators/${address}/delegations?pagination.limit=10&pagination.count_total=true`);\n\n        try {\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200) {\n                let delegationsCount = JSON.parse(delegations.content)?.pagination?.total;\n                return delegationsCount;\n            };\n        }\n        catch (e) {\n            console.log(url);\n            console.log(\"Getting error: %o when getting delegations count from %o\", e, url);\n        }\n    },\n\n    'Validators.fetchKeybase'(address) {\n        this.unblock();\n        // fetching keybase every base on keybaseFetchingInterval settings\n        // default to every 5 hours \n        \n        let url = sanitizeUrl(RPC + '/status');\n        let chainId;\n        try {\n            let response = HTTP.get(url);\n            let status = JSON.parse(response?.content);\n            chainId = (status?.result?.node_info?.network);\n        }\n        catch (e) {\n            console.log(\"Error getting chainId for keybase fetching\")        \n        }\n        let chainStatus = Chain.findOne({ chainId});\n        const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n\n        let lastKeybaseFetchTime = Date.parse(chainStatus?.lastKeybaseFetchTime) ?? 0\n        console.log(\"Last fetch time: %o\", lastKeybaseFetchTime)\n\n        console.log('Fetching keybase...')\n        // eslint-disable-next-line no-loop-func\n        Validators.find({}).forEach(async (validator) => {\n            try {\n                if (validator?.description && validator?.description?.identity) {\n                    let profileUrl = getValidatorProfileUrl(validator?.description?.identity)\n                    if (profileUrl) {\n                        bulkValidators.find({ address: validator?.address }).upsert().updateOne({ $set: { 'profile_url': profileUrl } });\n                        if (bulkValidators.length > 0) {\n                            bulkValidators.execute((err, result) => {\n                                if (err) {\n                                    console.log(`Error when updating validator profile_url ${err}`);\n                                }\n                                if (result) {\n                                    console.log('Validator profile_url has been updated!');\n                                }\n                            });\n                        }\n                    }\n                }\n            } catch (e) {\n                console.log(\"Error fetching Keybase for %o: %o\", validator?.address, e)\n            }\n        })\n        try{\n            Chain.update({ chainId }, { $set: { lastKeybaseFetchTime: new Date().toUTCString() } });\n        }\n        catch(e){\n            console.log(\"Error when updating lastKeybaseFetchTime\")\n        }\n\n    }    \n\n});","import { Meteor } from 'meteor/meteor';\nimport { Validators } from '../validators.js';\nimport { ValidatorRecords } from '../../records/records.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nMeteor.publish('validators.all', function (sort = \"description.moniker\", direction = -1, fields={}) {\n    return Validators.find({}, {sort: {[sort]: direction}, fields: fields});\n});\n\npublishComposite('validators.firstSeen',{\n    find() {\n        return Validators.find({});\n    },\n    children: [\n        {\n            find(val) {\n                return ValidatorRecords.find(\n                    { address: val.address },\n                    { sort: {height: 1}, limit: 1}\n                );\n            }\n        }\n    ]\n});\n\nMeteor.publish('validators.voting_power', function(){\n    return Validators.find({\n        status: 'BOND_STATUS_BONDED',\n        jailed:false\n    },{\n        sort:{\n            voting_power:-1\n        },\n        fields:{\n            address: 1,\n            description:1,\n            voting_power:1,\n            profile_url:1\n        }\n    }\n    );\n});\n\npublishComposite('validator.details', function(address){\n    let options = {address:address};\n    if (address.indexOf(Meteor.settings.public.bech32PrefixValAddr) != -1){\n        options = {operator_address:address}\n    }\n    return {\n        find(){\n            return Validators.find(options)\n        },\n        children: [\n            {\n                find(val){\n                    return VotingPowerHistory.find(\n                        {address:val.address},\n                        {sort:{height:-1}, limit:50}\n                    )\n                }\n            },\n            {\n                find(val) {\n                    return ValidatorRecords.find(\n                        { address: val.address },\n                        { sort: {height: -1}, limit: Meteor.settings.public.uptimeWindow}\n                    );\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords } from '../records/records.js';\nimport { VotingPowerHistory } from '../voting-power/history.js';\n\nexport const Validators = new Mongo.Collection('validators');\n\nValidators.helpers({\n    firstSeen(){\n        return ValidatorRecords.findOne({address:this.address});\n    },\n    history(){\n        return VotingPowerHistory.find({address:this.address}, {sort:{height:-1}, limit:50}).fetch();\n    }\n})\n// Validators.helpers({\n//     uptime(){\n//         // console.log(this.address);\n//         let lastHundred = ValidatorRecords.find({address:this.address}, {sort:{height:-1}, limit:100}).fetch();\n//         console.log(lastHundred);\n//         let uptime = 0;\n//         for (i in lastHundred){\n//             if (lastHundred[i].exists){\n//                 uptime+=1;\n//             }\n//         }\n//         return uptime;\n//     }\n// })","import { Mongo } from 'meteor/mongo';\n\nexport const VotingPowerHistory = new Mongo.Collection('voting_power_history');\n","import { Mongo } from 'meteor/mongo';\n\nexport const Evidences = new Mongo.Collection('evidences');\n","import { Mongo } from 'meteor/mongo';\n\nexport const ValidatorSets = new Mongo.Collection('validator_sets');\n","const admin = require('firebase-admin')\n//const serviceAccount = require('../../firebase.json')\nlet serviceAccount = process.env.FIREBASE_CONFIG\nserviceAccount = JSON.parse(serviceAccount)\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount)\n})\nmodule.exports.admin = admin\n","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","import { Blockscon } from '../../api/blocks/blocks.js';\nimport { Proposals } from '../../api/proposals/proposals.js';\nimport { Recipes } from '../../api/recipes/recipes.js';\nimport { Nfts } from '../../api/nfts/nfts.js';\nimport { Cookbooks } from '../../api/cookbooks/cookbooks.js';\nimport { ValidatorRecords, Analytics, MissedBlocksStats, MissedBlocks, AverageData, AverageValidatorData } from '../../api/records/records.js';\n// import { Status } from '../../api/status/status.js';\nimport { Transactions } from '../../api/transactions/transactions.js';\nimport { ValidatorSets } from '../../api/validator-sets/validator-sets.js';\nimport { Validators } from '../../api/validators/validators.js';\nimport { VotingPowerHistory } from '../../api/voting-power/history.js';\nimport { Evidences } from '../../api/evidences/evidences.js';\nimport { CoinStats } from '../../api/coin-stats/coin-stats.js';\nimport { ChainStates } from '../../api/chain/chain.js';\n\nChainStates.rawCollection().createIndex({ height: -1 }, { unique: true });\n\nBlockscon.rawCollection().createIndex({ height: -1 }, { unique: true });\nBlockscon.rawCollection().createIndex({ proposerAddress: 1 });\n\nEvidences.rawCollection().createIndex({ height: -1 });\n\nProposals.rawCollection().createIndex({ proposalId: 1 }, { unique: true });\n\nRecipes.rawCollection().createIndex({ ID: \"1\", NO: -1 }, { unique: true });\n\nNfts.rawCollection().createIndex({ ID: \"1\", NO: -1 }, { unique: true });\n\nCookbooks.rawCollection().createIndex({ ID: \"1\", NO: -1 }, { unique: true });\n\nValidatorRecords.rawCollection().createIndex({ address: 1, height: -1 }, { unique: 1 });\nValidatorRecords.rawCollection().createIndex({ address: 1, exists: 1, height: -1 });\n\nAnalytics.rawCollection().createIndex({ height: -1 }, { unique: true })\n\nMissedBlocks.rawCollection().createIndex({ proposer: 1, voter: 1, updatedAt: -1 });\nMissedBlocks.rawCollection().createIndex({ proposer: 1, blockHeight: -1 });\nMissedBlocks.rawCollection().createIndex({ voter: 1, blockHeight: -1 });\nMissedBlocks.rawCollection().createIndex({ voter: 1, proposer: 1, blockHeight: -1 }, { unique: true });\n\nMissedBlocksStats.rawCollection().createIndex({ proposer: 1 });\nMissedBlocksStats.rawCollection().createIndex({ voter: 1 });\nMissedBlocksStats.rawCollection().createIndex({ proposer: 1, voter: 1 }, { unique: true });\n\nAverageData.rawCollection().createIndex({ type: 1, createdAt: -1 }, { unique: true });\nAverageValidatorData.rawCollection().createIndex({ proposerAddress: 1, createdAt: -1 }, { unique: true });\n// Status.rawCollection.createIndex({})\n\nTransactions.rawCollection().createIndex({ txhash: 1 }, { unique: true });\nTransactions.rawCollection().createIndex({ height: -1 });\nTransactions.rawCollection().createIndex({ processed: 1 });\n// Transactions.rawCollection().createIndex({action:1});\nTransactions.rawCollection().createIndex({ \"tx_response.logs.events.attributes.key\": 1 });\nTransactions.rawCollection().createIndex({ \"tx_response.logs.events.attributes.value\": 1 });\nTransactions.rawCollection().createIndex({\n    \"tx.body.messages.delegator_address\": 1,\n    \"tx.body.messages.@type\": 1,\n    \"tx_response.code\": 1\n}, { partialFilterExpression: { \"tx_response.code\": { $exists: true } } })\n\nValidatorSets.rawCollection().createIndex({ block_height: -1 });\n\nValidators.rawCollection().createIndex({ address: 1 }, { unique: true, partialFilterExpression: { address: { $exists: true } } });\n// Validators.rawCollection().createIndex({consensusPubkey:1},{unique:true});\nValidators.rawCollection().createIndex({ \"consensusPubkey.value\": 1 }, { unique: true, partialFilterExpression: { \"consensusPubkey.value\": { $exists: true } } });\n\nVotingPowerHistory.rawCollection().createIndex({ address: 1, height: -1 });\nVotingPowerHistory.rawCollection().createIndex({ type: 1 });\n\nCoinStats.rawCollection().createIndex({ last_updated_at: -1 }, { unique: true });","// Import server startup through a single index entry point\n\nimport './util.js';\nimport './register-api.js';\nimport './create-indexes.js';\nimport queryString from 'querystring'; \nimport { HTTP } from 'meteor/http';\nimport { onPageLoad } from 'meteor/server-render'; \nimport { Meteor } from 'meteor/meteor';  \nimport { sanitizeUrl } from '@braintree/sanitize-url';\nimport { Transactions } from '/imports/api/transactions/transactions.js';\n \n// import { ServerStyleSheet } from \"styled-components\"\nimport { Helmet } from 'react-helmet'; \n// import App from '../../ui/App.jsx';\n\nconst IMAGE_WIDTH = 1200;\nconst IMAGE_HEIGHT = 800;\n\nvar siteName = 'Big-Dipper';\nvar description = 'Wallet deep link';\nvar price = \"No Price\"\nvar picWidth = IMAGE_WIDTH;\nvar picHeight = IMAGE_HEIGHT;   \nconst defaultImage = '/img/buy_icon.png'; \nconst defaultMetaTags = `\n<meta property=\"og:title\"       content=\"${siteName}\" />\n<meta property=\"og:description\" content=\"${description}\" />\n<meta property=\"og:image\"       content=\"${defaultImage}\" />\n<meta property=\"og:url\"         content=\"\" />\n`;\n\nconst BROWSER_BOT = 0;\nconst SLACK_BOT = 1;\nconst FACEBOOK_BOT = 2;\nconst TWITTER_BOT = 3;\nconst INSTAGRAM_BOT = 4;\nconst DISCORD_BOT = 5;\n \nvar botType = BROWSER_BOT;\n\nasync function  getRecipeData(recipe_id){\n    selectedRecipe = await Recipes.findOne({ ID: recipe_id });\n    return selectedRecipe\n} \n\nMeteor.startup(() => { \n  \n    onPageLoad(sink => {  \n        var url = sink.request.url.search;     \n        if(url == null){\n            sink.appendToHead(defaultMetaTags); \n            return;\n        }    \n        const querys = new URLSearchParams(url)\n        var img = ''; \n        var selectedRecipe = null;\n        var recipes = null;\n        \n        \n        if (querys.get('recipe_id') !== null && querys.get('cookbook_id') !== null && querys.get('address') !== null ) {\n            \n            const recipe_id = sanitizeUrl(querys.get('recipe_id'));\n            const cookbook_id = sanitizeUrl(querys.get('cookbook_id'));\n            let recipesUrl = sanitizeUrl(`${Meteor.settings.remote.api}/pylons/recipe/${cookbook_id}/${recipe_id}`);\n            \n            try { \n                \n                let response = HTTP.get(recipesUrl);\n                selectedRecipe = JSON.parse(response.content).recipe;\n                \n                \n            } catch (e) { \n                console.log(\"Error in get recipe\",e);\n            }\n            \n            if (selectedRecipe != undefined && selectedRecipe != null && selectedRecipe.entries.item_outputs.length > 0) {\n                const strings = selectedRecipe.entries.item_outputs[0].strings; \n                var priceValue = \"\";\n                var priceCurrency = \"\";\n               \n                \n                if (selectedRecipe?.coin_inputs?.[0]?.coins?.[0]) {\n                    priceValue = selectedRecipe?.coin_inputs?.[0]?.coins?.[0]?.amount || \"\" ;\n                    priceCurrency = selectedRecipe?.coin_inputs?.[0]?.coins?.[0]?.denom || \"\";\n                }\n                \n\n                if (strings != undefined && strings != null && strings.length > 0) { \n                    if(strings != null)\n                    {\n                        for (j = 0; j < strings.length; j++) { \n                            let key = strings[j].key;\n                            let value = strings[j].value;\n                            if(key == \"NFT_URL\" && value.indexOf('http') >= 0){\n                                img = value;\n                            }\n                            else if(key == \"Description\"){\n                                description = value;\n                            }  \n                            else if(key == \"Name\"){\n                                siteName = value;\n                            } \n                            \n                        } \n                    }\n                    let longs = selectedRecipe.entries.item_outputs[0].longs; \n                 \n                    if(longs != null)\n                    {\n                        for (j = 0; j < longs.length; j++) { \n                            let key = longs[j].key;\n                            let value = longs[j].weightRanges[0]?.lower; \n                            if(key == \"Width\"){\n                                picWidth = value; \n                            }\n                            else if(key == \"Height\"){\n                                picHeight = value\n                            }\n                        } \n                        picHeight = IMAGE_WIDTH * picHeight / picWidth;\n                        picWidth = IMAGE_WIDTH;\n                    } \n                }     \n\n                if(description != undefined && description != \"\"){  \n                    if (description.length > 150) {\n                        description = description.substring(0, 150) + '...';\n                    } \n                }\n\n                if(priceCurrency == \"USD\"){\n                    price = Math.floor(priceValue / 100) + '.' + (priceValue % 100) + ' ' + priceCurrency;\n                }\n                else if (priceValue !== \"\"){\n                    let coins = Meteor.settings.public.coins;\n                    let coin = coins?.length ? coins.find(coin => coin.denom.toLowerCase() === priceCurrency.toLowerCase()) : null;\n                    if (coin) {\n                        price = priceValue / coin.fraction + \" \" + coin.displayName;\n                    } else {\n                        price = priceValue + ' ' + priceCurrency;\n                    }\n                }\n\n              \n\n                //slackbot-linkexpanding\n                //discordbot\n                //facebookbot\n                //twitterbot\n                const { headers, browser } = sink.request;\n                if(browser && browser.name.includes(\"slackbot\")){\n                    botType = SLACK_BOT;\n                }\n                else if(browser && browser.name.includes(\"facebookbot\")){\n                    botType = FACEBOOK_BOT;\n                }\n                else if(browser && browser.name.includes(\"twitterbot\")){\n                    botType = TWITTER_BOT;\n                }\n                else if(browser && browser.name.includes(\"discordbot\")){\n                    botType = DISCORD_BOT;\n                } \n                else{\n                    botType = BROWSER_BOT;\n                }\n\n                if(botType == TWITTER_BOT){\n                    description = description + \"<h4>\" + price + \"</h4>\";\n                }\n                else if(botType == FACEBOOK_BOT){\n                    siteName = siteName + \"<h4>\" + price + \"</h4>\";\n                }\n                else if(botType != SLACK_BOT){\n                    description = price !== \"No Price\" ? description + \"\\nPrice: \" + price : description;\n                }\n                \n                if (selectedRecipe.entries != null) {\n                    const itemoutputs = selectedRecipe.entries.item_outputs; \n                    if (itemoutputs.length > 0) {\n                        let longs = itemoutputs[0].Longs; \n                        if(longs != null)\n                        {\n                            for (i = 0; i < longs.length; i++) { \n                                let weightRanges = longs[i].weightRanges;\n                                if(longs[i].Key == \"Width\"){\n                                    if(weightRanges != null){\n                                        picWidth = weightRanges[0].lower * weightRanges[0].weight;  \n                                    } \n                                }\n                                else if(longs[i].Key == \"Height\"){\n                                    if(weightRanges != null){\n                                        picHeight = weightRanges[0].lower * weightRanges[0].weight;   \n                                    } \n                                }\n                            }\n                            picHeight = IMAGE_WIDTH * picHeight / picWidth;\n                            picWidth = IMAGE_WIDTH;\n                        }\n\n                        let strings = itemoutputs[0].strings; \n                        for (i = 0; i < strings.length; i++) {\n                            try {\n                                var values = strings[i].value;\n                                if (strings[i].key = \"NFT_URL\" && values.indexOf('http') >= 0) { \n                                    img = values;     \n                                    break;\n                                }\n                            } catch (e) {\n                                console.log('strings[i].Value', e)\n                                break;\n                            }\n        \n                        }\n                    } \n                }    \n                \n                \n                const MetaTags = `  \n                <meta name=\"description\"              content=\"${description}\">\n                <meta property=\"og:type\"              content=\"article\">\n                <meta property=\"og:title\"             content=\"${siteName}\" />\n                <meta property=\"og:description\"       content=\"${description}\" data-rh=\"true\"/>\n                <meta property=\"og:url\"               content=\"${Meteor.absoluteUrl() + url}\" />\n                <meta property=\"og:image\"             content=\"${img}\" />\n                <meta property=\"og:image:width\"       content=\"${picWidth}\" />\n                <meta property=\"og:image:height\"      content=\"${picHeight}\" />   \n                <meta name=\"twitter:card\"             content=\"summary_large_image\" />\n                <meta name=\"twitter:title\"            content=\"${siteName}\" />\n                <meta name=\"twitter:description\"      content=\"${description}\">\n                `;\n            \n                sink.appendToHead(MetaTags);\n            }\n            \n            \n        }  \n        else if (querys.get('recipe_id') !== null) {\n            const recipe_id = sanitizeUrl(querys['recipe_id']);\n            const cookbook_id = sanitizeUrl(querys['cookbook_id']);\n            let recipesUrl = sanitizeUrl(`${Meteor.settings.remote.api}/pylons/recipe/${cookbook_id}/${recipe_id}`);\n\n            try { \n                let response = HTTP.get(recipesUrl);\n                //selectedItem = JSON.parse(response.content).CompletedExecutions;   \n                selectedRecipe = JSON.parse(response.content).Recipe;\n                \n            } catch (e) { \n                console.log(e);\n            }\n            \n            if (selectedRecipe != undefined && selectedRecipe != null && selectedRecipe.entries.item_outputs.length > 0) {                 \n                const strings = selectedRecipe.entries.item_outputs[0].strings; \n                var priceValue = \"\";\n                var priceCurrency = \"\";\n                if (selectedRecipe?.coin_inputs?.[0]?.coins?.[0]) {\n                    priceValue = selectedRecipe?.coin_inputs?.[0]?.coins?.[0]?.amount || \"\" ;\n                    priceCurrency = selectedRecipe?.coin_inputs?.[0]?.coins?.[0]?.denom || \"\";\n                }\n                if (strings != undefined && strings != null && strings.length > 0) { \n                    if(strings != null)\n                    {\n                        \n                        for (j = 0; j < strings.length; j++) { \n                            let key = strings[j].key;\n                            let value = strings[j].value;\n                            if(key == \"NFT_URL\" && value.indexOf('http') >= 0){\n                                img = value;\n                            }\n                            else if(key == \"Description\"){\n                                description = value;\n                            }  \n                            else if(key == \"Name\"){\n                                siteName = value;\n                            } \n                            \n                        } \n                    }\n                    let longs = selectedRecipe.entries.item_outputs[0].longs; \n                 \n                    if(longs != null)\n                    {\n                        for (j = 0; j < longs.length; j++) { \n                            let key = longs[j].key;\n                            let value = longs[j].weightRanges[0].lower; \n                            if(key == \"Width\"){\n                                picWidth = value; \n                            }\n                            else if(key == \"Height\"){\n                                picHeight = value\n                            }\n                        } \n                        picHeight = IMAGE_WIDTH * picHeight / picWidth;\n                        picWidth = IMAGE_WIDTH;\n                    } \n                }     \n\n                if(description != undefined && description != \"\"){  \n                    if (description.length > 150) {\n                        description = description.substring(0, 150) + '...';\n                    } \n                }\n\n                if(priceCurrency == \"USD\"){\n                    price = Math.floor(priceValue / 100) + '.' + (priceValue % 100) + ' ' + priceCurrency;\n                }\n                else if (priceValue !== \"\"){\n                    let coins = Meteor.settings.public.coins;\n                    let coin = coins?.length ? coins.find(coin => coin.denom.toLowerCase() === priceCurrency.toLowerCase()) : null;\n                    if (coin) {\n                        price = priceValue / coin.fraction + \" \" + coin.displayName;\n                    } else {\n                        price = priceValue + ' ' + priceCurrency;\n                    }\n                }\n                //slackbot-linkexpanding\n                //discordbot\n                //facebookbot\n                //twitterbot\n                const { headers, browser } = sink.request;\n                if(browser && browser.name.includes(\"slackbot\")){\n                    botType = SLACK_BOT;\n                }\n                else if(browser && browser.name.includes(\"facebookbot\")){\n                    botType = FACEBOOK_BOT;\n                }\n                else if(browser && browser.name.includes(\"twitterbot\")){\n                    botType = TWITTER_BOT;\n                }\n                else if(browser && browser.name.includes(\"discordbot\")){\n                    botType = DISCORD_BOT;\n                } \n                else{\n                    botType = BROWSER_BOT;\n                }\n\n                if(botType == TWITTER_BOT){\n                    description = description + \"<h4>\" + price + \"</h4>\";\n                }\n                else if(botType == FACEBOOK_BOT){\n                    siteName = siteName + \"<h4>\" + price + \"</h4>\";\n                }\n                else if(botType != SLACK_BOT){\n                    description = price !== \"No Price\" ? description + \"\\nPrice: \" + price : description;\n                }\n                \n               \n                \n                const MetaTags = `  \n                <meta name=\"description\"              content=\"${description}\">\n                <meta property=\"og:type\"              content=\"article\">\n                <meta property=\"og:title\"             content=\"${siteName}\" />\n                <meta property=\"og:description\"       content=\"${description}\" data-rh=\"true\"/>\n                <meta property=\"og:url\"               content=\"${Meteor.absoluteUrl() + url}\" />\n                <meta property=\"og:image\"             content=\"${img}\" />\n                <meta property=\"og:image:width\"       content=\"${picWidth}\" />\n                <meta property=\"og:image:height\"      content=\"${picHeight}\" />   \n                <meta name=\"twitter:card\"             content=\"summary_large_image\" />\n                <meta name=\"twitter:title\"            content=\"${siteName}\" />\n                <meta name=\"twitter:description\"      content=\"${description}\">\n                `;                \n\n                sink.appendToHead(MetaTags);\n            }\n        } \n        else\n        { \n            sink.appendToHead(defaultMetaTags);\n        }\n    });\n});","// Register your apis here\n\nimport \"../../api/ledger/server/methods.js\";\n\nimport \"../../api/chain/server/methods.js\";\nimport \"../../api/chain/server/publications.js\";\n\nimport \"../../api/blocks/server/methods.js\";\nimport \"../../api/blocks/server/publications.js\";\n\nimport \"../../api/validators/server/methods.js\";\nimport \"../../api/validators/server/publications.js\";\n\nimport \"../../api/records/server/methods.js\";\nimport \"../../api/records/server/publications.js\";\n\nimport \"../../api/proposals/server/methods.js\";\nimport \"../../api/proposals/server/publications.js\";\n\nimport \"../../api/recipes/server/methods.js\";\nimport \"../../api/recipes/server/publications.js\";\n\nimport \"../../api/nfts/server/methods.js\";\nimport \"../../api/nfts/server/publications.js\";\n\nimport \"../../api/cookbooks/server/methods.js\";\nimport \"../../api/cookbooks/server/publications.js\";\n\nimport \"../../api/voting-power/server/publications.js\";\n\nimport \"../../api/transactions/server/methods.js\";\nimport \"../../api/transactions/server/publications.js\";\n\nimport \"../../api/delegations/server/methods.js\";\nimport \"../../api/delegations/server/publications.js\";\n\nimport \"../../api/status/server/publications.js\";\n\nimport \"../../api/accounts/server/methods.js\";\n\nimport \"../../api/coin-stats/server/methods.js\";\n\nimport \"../../api/analytics/server/methods.js\";\nimport \"../../api/analytics/server/publications.js\";\n\nimport \"../../api/actions/server/methods.js\";\nimport \"../../api/actions/server/publications.js\";\n\nimport \"../../api/fcmtoken/server/methods.js\";\nimport \"../../api/notifications/server/methods\";\n","import {bech32} from 'bech32'\nimport { HTTP } from 'meteor/http';\nimport * as cheerio from 'cheerio';\nimport { tmhash } from 'tendermint/lib/hash'\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\n\nMeteor.methods({\n    hexToBech32: function(address, prefix) {\n        let addressBuffer = Buffer.from(address, 'hex');\n        // let buffer = Buffer.alloc(37)\n        // addressBuffer.copy(buffer);\n        return bech32.encode(prefix, bech32.toWords(addressBuffer));\n    },\n    pubkeyToBech32Old: function(pubkey, prefix) {\n        let buffer;\n\n        try {\n            if (pubkey.type.indexOf(\"Ed25519\") > 0){\n            // '1624DE6420' is ed25519 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex');\n                buffer = Buffer.alloc(37);\n        \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else if (pubkey.type.indexOf(\"Secp256k1\") > 0){\n            // 'EB5AE98721' is secp256k1 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('EB5AE98721', 'hex');\n                buffer = Buffer.alloc(38);\n    \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else {\n                console.log(\"Pubkey type not supported.\");\n                return false;\n            }\n\n            return bech32.encode(prefix, bech32.toWords(buffer))\n        }\n        catch (e){\n            console.log(\"Error converting from pubkey to bech32: %o\\n %o\", pubkey, e);\n            return false\n        }\n    },\n    pubkeyToBech32: function(pubkey, prefix) {\n        let buffer;\n\n        try {\n            if (pubkey[\"@type\"].indexOf(\"ed25519\") > 0){\n            // '1624DE6420' is ed25519 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex');\n                buffer = Buffer.alloc(37);\n        \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.key, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else if (pubkey[\"@type\"].indexOf(\"secp256k1\") > 0){\n            // 'EB5AE98721' is secp256k1 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('EB5AE98721', 'hex');\n                buffer = Buffer.alloc(38);\n    \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.key, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else {\n                console.log(\"Pubkey type not supported.\");\n                return false;\n            }\n\n            return bech32.encode(prefix, bech32.toWords(buffer))\n        }\n        catch (e){\n            console.log(\"Error converting from pubkey to bech32: %o\\n %o\", pubkey, e);\n            return false\n        }\n    },\n    bech32ToPubkey: function(pubkey, type) {\n        // type can only be either 'tendermint/PubKeySecp256k1' or 'tendermint/PubKeyEd25519'\n        let pubkeyAminoPrefix, buffer;\n\n        try {\n            if (type.indexOf(\"ed25519\") > 0){\n            // '1624DE6420' is ed25519 pubkey prefix\n                pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n                buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n            }\n            else if (type.indexOf(\"secp256k1\") > 0){\n            // 'EB5AE98721' is secp256k1 pubkey prefix\n                pubkeyAminoPrefix = Buffer.from('EB5AE98721', 'hex')\n                buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n            }\n            else {\n                console.log(\"Pubkey type not supported.\");\n                return false;\n            }\n        \n            return buffer.slice(pubkeyAminoPrefix.length).toString('base64');\n        }\n        catch (e){\n            console.log(\"Error converting from bech32 to pubkey: %o\\n %o\", pubkey, e);\n            return false\n        }\n    },\n    getAddressFromPubkey: function(pubkey){\n        var bytes = Buffer.from(pubkey.key, 'base64');\n        return tmhash(bytes).slice(0, 20).toString('hex').toUpperCase();\n    },\n    getDelegator: function(operatorAddr){\n        let address = bech32.decode(operatorAddr);\n        return bech32.encode(Meteor.settings.public.bech32PrefixAccAddr, address.words);\n    }, \n    getKeybaseTeamPic: function(keybaseUrl){\n        let teamPage = HTTP.get(sanitizeUrl(keybaseUrl));\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        }\n    },\n    getVersion: function(){\n        const version = Assets.getText('version');\n        return version ? version : 'beta'\n    }\n})\n","/* eslint-disable no-tabs */\nimport { Meteor } from 'meteor/meteor';\nimport numbro from 'numbro';\n\nautoformat = (value) => {\n    let formatter = '0,0.0000';\n    value = Math.round(value * 1000) / 1000\n    if (Math.round(value) === value)\n        formatter = '0,0'\n    else if (Math.round(value * 10) === value * 10)\n        formatter = '0,0.0'\n    else if (Math.round(value * 100) === value * 100)\n        formatter = '0,0.00'\n    else if (Math.round(value * 1000) === value * 1000)\n        formatter = '0,0.000'\n    return numbro(value).format(formatter)\n}\n\nconst coinList = Meteor.settings.public.coins;\n\nexport default class Coin {\n\n    static StakingCoin = (coinList == null) ? \"\" : coinList.find(coin => coin.denom === Meteor.settings.public.bondDenom);\n    static MinStake = (coinList == null) ? 0 : 1 / Number(Coin.StakingCoin.fraction);\n\n    constructor(amount, denom = Meteor.settings.public.bondDenom) {\n        const lowerDenom = denom.toLowerCase();\n        if (coinList == null) {\n            this._coin = null;\n        } else {\n            this._coin = coinList.find(coin =>\n                coin.denom.toLowerCase() === lowerDenom || coin.displayName.toLowerCase() === lowerDenom\n            );\n        }\n\n\n        if (this._coin) {\n            if (lowerDenom === this._coin.denom.toLowerCase()) {\n                this._amount = Number(amount);\n            } else if (lowerDenom === this._coin.displayName.toLowerCase()) {\n                this._amount = Number(amount) * this._coin.fraction;\n            }\n        } else {\n            this._coin = \"\";\n            this._amount = Number(amount);\n        }\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    get stakingAmount() {\n        return (this._coin) ? this._amount / this._coin.fraction : this._amount;\n    }\n\n    toString(precision) {\n        // default to display in mint denom if it has more than 4 decimal places\n        let minStake = Coin.StakingCoin.fraction / (precision ? (10 ** precision) : 10000)\n        if (this.amount === 0) {\n            return `0 ${this._coin.displayName}`\n        } else if (this.amount < minStake) {\n            return `${numbro(this.amount).format('0,0.000000' )} ${this._coin.denom}`;\n        } else if (!this._coin.displayName) {\n            return `${this.stakingAmount ?? 0} ${Coin.StakingCoin.displayName}`\n        } else if (this.amount % 1 === 0) {\n            return `${this.stakingAmount} ${this._coin.displayName}`\n        } else {\n            return `${precision?numbro(this.stakingAmount).format('0,0.' + '0'.repeat(precision)):autoformat(this.stakingAmount)} ${this._coin.displayName}`\n        }\n    }\n}","import React from 'react';\nimport { DisappearedLoading } from 'react-loadingg';\n\nconst Loader = () => <div><DisappearedLoading color=\"#EF4421\" size=\"sm\"/></div>;\n\nexport default Loader;","export const goTimeToISOString = (time) => {\n    const millisecond = parseInt(time.seconds+time.nanos.toString().substring(0,3));\n    return (new Date(millisecond)).toISOString()\n}","// Server entry point, imports all server code\n\nimport '/imports/startup/server';\nimport '/imports/startup/both';\n// import moment from 'moment';\n// import '/imports/api/blocks/blocks.js';\n\nSYNCING = false;\nTXSYNCING = false;\nCOUNTMISSEDBLOCKS = false;\nCOUNTMISSEDBLOCKSSTATS = false;\nRPC = Meteor.settings.remote.rpc;\nAPI = Meteor.settings.remote.api;\n\ntimerBlocks = 0;\ntimerTransactions = 0;\ntimerChain = 0;\ntimerConsensus = 0;\ntimerProposal = 0;\ntimerProposalsResults = 0;\ntimerRecipe = 0;\ntimerRecipesResults = 0;\ntimerCookbook = 0;\ntimerCookbooksResults = 0;\ntimerMissedBlock = 0;\ntimerDelegation = 0;\ntimerAggregate = 0;\ntimerFetchKeybase = 0;\ntimersendnunsettledotifications = 0\n\nconst DEFAULTSETTINGS = '/settings.json';\n\nupdateChainStatus = () => {\n    Meteor.call('chain.updateStatus', (error, result) => {\n        if (error) {\n            console.log(\"updateStatus: %o\", error);\n        } else {\n            console.log(\"updateStatus: %o\", result);\n        }\n    })\n}\n\nupdateBlock = () => {\n    Meteor.call('blocks.blocksUpdate', (error, result) => {\n        if (error) {\n            console.log(\"updateBlocks: %o\", error);\n        } else {\n            console.log(\"updateBlocks: %o\", result);\n        }\n    })\n}\n\nupdateTransactions = () => {\n    Meteor.call('Transactions.updateTransactions', (error, result) => {\n        if (error) {\n            console.log(\"updateTransactions: %o\", error);\n        } else {\n            console.log(\"updateTransactions: %o\", result);\n        }\n    })\n}\n\nupsertSales = () => {\n    Meteor.call('Analytics.upsertSales', (error, result) => {\n        if (error) {\n            console.log(\"Upsert Sales Failed: %o\", error);\n        } else {\n            console.log(\"Upsert Sales Success\");\n        }\n    })\n}\n\nupsertListings = () => {\n    Meteor.call('Analytics.upsertListings', (error, result) => {\n        if (error) {\n            console.log(\"Upsert Listing Failed: %o\", error);\n        } else {\n            console.log(\"Upsert Listing Success\");\n        }\n    })\n}\n\ngetConsensusState = () => {\n    Meteor.call('chain.getConsensusState', (error, result) => {\n        if (error) {\n            console.log(\"get consensus: %o\", error)\n        }\n    })\n}\n\ngetRecipes = () => {\n    Meteor.call('recipes.getRecipes', (error, result) => {\n        if (error) {\n            console.log(\"get recipe: %o\", error);\n        }\n        if (result) {\n            console.log(\"get recipe: true\");\n        }\n    });\n}\n\ngetRecipesResults = () => {\n    Meteor.call('recipes.getRecipeResults', (error, result) => {\n        if (error) {\n            console.log(\"get recipes result: %o\", error);\n        }\n        if (result) {\n            console.log(\"get recipes result: %o\", result);\n        }\n    });\n}\n\ngetNfts = () => {\n    Meteor.call('nfts.getNfts', (error, result) => {\n        if (error) {\n            console.log(\"get nft: %o\", error);\n        }\n        if (result) {\n            console.log(\"get nft: %o\", result);\n        }\n    });\n}\n\ngetNftsResults = () => {\n    Meteor.call('nfts.getNftResults', (error, result) => {\n        if (error) {\n            console.log(\"get nfts result: %o\", error);\n        }\n        if (result) {\n            console.log(\"get nfts result: %o\", result);\n        }\n    });\n}\n\ngetCookbooks = () => {\n    Meteor.call('cookbooks.getCookbooks', (error, result) => {\n        if (error) {\n            console.log(\"get cookbook: %o\", error);\n        }\n        if (result) {\n            console.log(\"get cookbook: %o\", result);\n        }\n    });\n}\n\ngetCookbooksResults = () => {\n    Meteor.call('cookbooks.getCookbookResults', (error, result) => {\n        if (error) {\n            console.log(\"get getCookbookResults result: %o\", error);\n        }\n        if (result) {\n            console.log(\"get getCookbookResults result: %o\", result);\n        }\n    });\n}\n\ngetProposals = () => {\n    Meteor.call('proposals.getProposals', (error, result) => {\n        if (error) {\n            console.log(\"get proposal: %o\", error);\n        }\n        if (result) {\n            console.log(\"get proposal: %o\", result);\n        }\n    });\n}\n\ngetProposalsResults = () => {\n    Meteor.call('proposals.getProposalResults', (error, result) => {\n        if (error) {\n            console.log(\"get proposals result: %o\", error);\n        }\n        if (result) {\n            console.log(\"get proposals result: %o\", result);\n        }\n    });\n}\n\nupdateMissedBlocks = () => {\n    Meteor.call('ValidatorRecords.calculateMissedBlocks', (error, result) => {\n        if (error) {\n            console.log(\"missed blocks error: %o\", error)\n        }\n        if (result) {\n            console.log(\"missed blocks ok: %o\", result);\n        }\n    });\n}\n\nfetchKeybase = () => {\n    Meteor.call('Validators.fetchKeybase', (error, result) => {\n        if (error) {\n            console.log(\"Error when fetching Keybase\" + error)\n        }\n        if (result) {\n            console.log(\"Keybase profile_url updated \", result);\n        }\n    });\n}\n\ngetDelegations = () => {\n    Meteor.call('delegations.getDelegations', (error, result) => {\n        if (error) {\n            console.log(\"get delegations error: %o\", error)\n        } else {\n            console.log(\"get delegations ok: %o\", result)\n        }\n    });\n}\n\nsendUnsettledNotifications = () => {\n    Meteor.call(\"Notifications.sendPushNotifications\", (error, res) => {\n      if (error) {\n        console.log(\"Error Sending Notifications\",error);\n      } else {\n        console.log(\"Notification have been sent \",res,error);\n      }\n    });\n  };\n\n\naggregateMinutely = () => {\n    // doing something every min\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"m\", (error, result) => {\n        if (error) {\n            console.log(\"aggregate minutely block time error: %o\", error)\n        } else {\n            console.log(\"aggregate minutely block time ok: %o\", result)\n        }\n    });\n\n    Meteor.call('coinStats.getCoinStats', (error, result) => {\n        if (error) {\n            console.log(\"get coin stats error: %o\", error);\n        } else {\n            console.log(\"get coin stats ok: %o\", result)\n        }\n    });\n}\n\naggregateHourly = () => {\n    // doing something every hour\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"h\", (error, result) => {\n        if (error) {\n            console.log(\"aggregate hourly block time error: %o\", error)\n        } else {\n            console.log(\"aggregate hourly block time ok: %o\", result)\n        }\n    });\n}\n\naggregateDaily = () => {\n    // doing somthing every day\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"d\", (error, result) => {\n        if (error) {\n            console.log(\"aggregate daily block time error: %o\", error)\n        } else {\n            console.log(\"aggregate daily block time ok: %o\", result)\n        }\n    });\n\n    Meteor.call('Analytics.aggregateValidatorDailyBlockTime', (error, result) => {\n        if (error) {\n            console.log(\"aggregate validators block time error: %o\", error)\n        } else {\n            console.log(\"aggregate validators block time ok: %o\", result);\n        }\n    })\n}\n\n\n\nMeteor.startup(async function() {\n    if (Meteor.isDevelopment) {\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 1;\n        import DEFAULTSETTINGSJSON from '../settings.json'\n        Object.keys(DEFAULTSETTINGSJSON).forEach((key) => {\n            if (Meteor.settings[key] == undefined) {\n                console.warn(`CHECK SETTINGS JSON: ${key} is missing from settings`)\n                Meteor.settings[key] = {};\n            }\n            Object.keys(DEFAULTSETTINGSJSON[key]).forEach((param) => {\n                if (Meteor.settings[key][param] == undefined) {\n                    console.warn(`CHECK SETTINGS JSON: ${key}.${param} is missing from settings`)\n                    Meteor.settings[key][param] = DEFAULTSETTINGSJSON[key][param]\n                }\n            })\n        })\n    }  \n\n    if (Meteor.settings.debug.startTimer) {\n\n        timersendnunsettledotifications = Meteor.setInterval(function () {\n            sendUnsettledNotifications();\n          }, Meteor.settings.params.collectNotificationsInterval);\n\n        timerConsensus = Meteor.setInterval(function() {\n            getConsensusState();\n        }, Meteor.settings.params.consensusInterval);\n\n        timerBlocks = Meteor.setInterval(function() {\n            updateBlock();\n        }, Meteor.settings.params.blockInterval);\n\n        timerTransactions = Meteor.setInterval(function() {\n            updateTransactions();\n            upsertSales();\n            upsertListings();\n        }, Meteor.settings.params.transactionsInterval);\n\n        timerChain = Meteor.setInterval(function() {\n            updateChainStatus();\n        }, Meteor.settings.params.statusInterval);\n\n        if (Meteor.settings.public.modules.gov) {\n            timerProposal = Meteor.setInterval(function() {\n                getProposals();\n            }, Meteor.settings.params.proposalInterval);\n\n            timerProposalsResults = Meteor.setInterval(function() {\n                getProposalsResults();\n            }, Meteor.settings.params.proposalInterval);\n        }\n\n        timerRecipe = Meteor.setInterval(function() {\n            getRecipes();\n        }, Meteor.settings.params.recipeInterval);\n\n        // timerRecipesResults = Meteor.setInterval(function() {\n        //     getRecipesResults();\n        // }, Meteor.settings.params.recipeInterval);\n\n        timerNft = Meteor.setInterval(function() {\n            getNfts();\n        }, Meteor.settings.params.nftInterval);\n\n        // timerNftsResults = Meteor.setInterval(function() {\n        //     getNftsResults();\n        // }, Meteor.settings.params.nftInterval);\n\n        timerCookbook = Meteor.setInterval(function() {\n            getCookbooks();\n        }, Meteor.settings.params.cookbookInterval);\n\n        // timerCookbooksResults = Meteor.setInterval(function() {\n        //     getCookbooksResults();\n        // }, Meteor.settings.params.cookbookInterval);\n\n        timerMissedBlock = Meteor.setInterval(function() {\n            updateMissedBlocks();\n        }, Meteor.settings.params.missedBlocksInterval);\n\n        timerFetchKeybase = Meteor.setInterval(function() {\n            fetchKeybase();\n        }, Meteor.settings.params.keybaseFetchingInterval);\n\n        // timerDelegation = Meteor.setInterval(function(){\n        //     getDelegations();\n        // }, Meteor.settings.params.delegationInterval);\n\n        timerAggregate = Meteor.setInterval(function() {\n            let now = new Date();\n            if ((now.getUTCSeconds() == 0)) {\n                aggregateMinutely();\n            }\n\n            if ((now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)) {\n                aggregateHourly();\n            }\n\n            if ((now.getUTCHours() == 0) && (now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)) {\n                aggregateDaily();\n            }\n        }, 1000)\n    }\n});"]}