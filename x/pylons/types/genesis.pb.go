// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pylons/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the pylons module's genesis state.
type GenesisState struct {
	// this line is used by starport scaffolding # genesis/proto/state
	EntityCount                  uint64                     `protobuf:"varint,11,opt,name=entityCount,proto3" json:"entityCount,omitempty"`
	Params                       Params                     `protobuf:"bytes,10,opt,name=params,proto3" json:"params"`
	GoogleInAppPurchaseOrderList []GoogleInAppPurchaseOrder `protobuf:"bytes,8,rep,name=googleInAppPurchaseOrderList,proto3" json:"googleInAppPurchaseOrderList"`
	GoogleIAPOrderCount          uint64                     `protobuf:"varint,9,opt,name=googleIAPOrderCount,proto3" json:"googleIAPOrderCount,omitempty"`
	ExecutionList                []Execution                `protobuf:"bytes,7,rep,name=executionList,proto3" json:"executionList"`
	ExecutionCount               uint64                     `protobuf:"varint,6,opt,name=executionCount,proto3" json:"executionCount,omitempty"`
	PendingExecutionList         []Execution                `protobuf:"bytes,5,rep,name=pendingExecutionList,proto3" json:"pendingExecutionList"`
	PendingExecutionCount        uint64                     `protobuf:"varint,4,opt,name=pendingExecutionCount,proto3" json:"pendingExecutionCount,omitempty"`
	ItemList                     []Item                     `protobuf:"bytes,3,rep,name=itemList,proto3" json:"itemList"`
	RecipeList                   []Recipe                   `protobuf:"bytes,2,rep,name=recipeList,proto3" json:"recipeList"`
	CookbookList                 []Cookbook                 `protobuf:"bytes,1,rep,name=cookbookList,proto3" json:"cookbookList"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_6de94af8a698f1f8, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetEntityCount() uint64 {
	if m != nil {
		return m.EntityCount
	}
	return 0
}

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetGoogleInAppPurchaseOrderList() []GoogleInAppPurchaseOrder {
	if m != nil {
		return m.GoogleInAppPurchaseOrderList
	}
	return nil
}

func (m *GenesisState) GetGoogleIAPOrderCount() uint64 {
	if m != nil {
		return m.GoogleIAPOrderCount
	}
	return 0
}

func (m *GenesisState) GetExecutionList() []Execution {
	if m != nil {
		return m.ExecutionList
	}
	return nil
}

func (m *GenesisState) GetExecutionCount() uint64 {
	if m != nil {
		return m.ExecutionCount
	}
	return 0
}

func (m *GenesisState) GetPendingExecutionList() []Execution {
	if m != nil {
		return m.PendingExecutionList
	}
	return nil
}

func (m *GenesisState) GetPendingExecutionCount() uint64 {
	if m != nil {
		return m.PendingExecutionCount
	}
	return 0
}

func (m *GenesisState) GetItemList() []Item {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func (m *GenesisState) GetRecipeList() []Recipe {
	if m != nil {
		return m.RecipeList
	}
	return nil
}

func (m *GenesisState) GetCookbookList() []Cookbook {
	if m != nil {
		return m.CookbookList
	}
	return nil
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "Pylonstech.pylons.pylons.GenesisState")
}

func init() { proto.RegisterFile("pylons/genesis.proto", fileDescriptor_6de94af8a698f1f8) }

var fileDescriptor_6de94af8a698f1f8 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0xb5, 0x1a, 0xd7, 0x4d, 0xd7, 0x69, 0xa1, 0x1b, 0xa7, 0x08, 0xd3, 0xaa, 0x22, 0x85, 0xe2,
	0x43, 0x2b, 0x15, 0xb7, 0xe7, 0xd2, 0x24, 0x24, 0x21, 0x10, 0x88, 0x70, 0x6f, 0x85, 0x12, 0x64,
	0x65, 0x90, 0x97, 0x44, 0xbb, 0x8b, 0xb4, 0x82, 0x18, 0x7a, 0xee, 0xb9, 0x9f, 0x95, 0x63, 0x8e,
	0x3d, 0x95, 0x62, 0xff, 0x48, 0xd1, 0xec, 0xc8, 0xc4, 0xc6, 0x0a, 0xe4, 0xa4, 0xe5, 0xcd, 0x7b,
	0x6f, 0xde, 0xac, 0x66, 0x59, 0x4f, 0x4f, 0xaf, 0x94, 0x2c, 0xc2, 0x14, 0x24, 0x14, 0xa2, 0x08,
	0x74, 0xae, 0x8c, 0xe2, 0x6e, 0x84, 0xa8, 0x81, 0x64, 0x12, 0x58, 0x02, 0x7d, 0xfa, 0xaf, 0x6b,
	0xbe, 0x52, 0xe9, 0x15, 0x9c, 0x8b, 0x58, 0x9f, 0xab, 0xfc, 0x02, 0x72, 0x2b, 0xec, 0xbf, 0xa4,
	0x32, 0x5c, 0x43, 0x52, 0x1a, 0xa1, 0x24, 0xe1, 0x2f, 0x08, 0x17, 0x06, 0x32, 0x82, 0xb6, 0x09,
	0xca, 0x21, 0x11, 0x1a, 0x08, 0xdc, 0x21, 0x30, 0x51, 0xea, 0x72, 0xac, 0xd4, 0xe5, 0x0a, 0x57,
	0xc7, 0x79, 0x9c, 0x51, 0xc8, 0x7e, 0x2f, 0x55, 0xa9, 0xc2, 0x63, 0x58, 0x9d, 0x2c, 0xba, 0xfb,
	0xab, 0xc3, 0xb6, 0x8e, 0xed, 0x30, 0xdf, 0x4c, 0x6c, 0x80, 0xfb, 0xac, 0x0b, 0xd2, 0x08, 0x33,
	0x3d, 0x50, 0xa5, 0x34, 0x6e, 0xd7, 0x77, 0x06, 0xed, 0xd1, 0x5d, 0x88, 0x7f, 0x61, 0x1d, 0x6b,
	0xec, 0x32, 0xdf, 0x19, 0x74, 0x87, 0x7e, 0xd0, 0x34, 0x7e, 0x10, 0x21, 0x6f, 0xbf, 0x7d, 0xf3,
	0xf7, 0x4d, 0x6b, 0x44, 0x2a, 0xfe, 0x93, 0xbd, 0xb2, 0xd7, 0x71, 0x22, 0xf7, 0xb4, 0x8e, 0xca,
	0x3c, 0x99, 0xc4, 0x05, 0x9c, 0x55, 0xd7, 0x72, 0x2a, 0x0a, 0xe3, 0x6e, 0xfa, 0x1b, 0x83, 0xee,
	0x70, 0xd8, 0xec, 0x7a, 0xdc, 0xa0, 0xa6, 0x3e, 0xf7, 0xba, 0xf3, 0x8f, 0x6c, 0x9b, 0xea, 0x7b,
	0x11, 0xa2, 0x76, 0xce, 0xa7, 0x38, 0xe7, 0xba, 0x12, 0x3f, 0x63, 0xcf, 0x16, 0xff, 0x07, 0x03,
	0x3e, 0xc1, 0x80, 0x6f, 0x9b, 0x03, 0x1e, 0xd6, 0x74, 0x4a, 0xb4, 0xac, 0xe7, 0xef, 0xd8, 0xf3,
	0x05, 0x60, 0xbb, 0x77, 0xb0, 0xfb, 0x0a, 0xca, 0x7f, 0xb0, 0x9e, 0x06, 0x79, 0x21, 0x64, 0x7a,
	0xb8, 0xd4, 0xff, 0xf1, 0x43, 0xfb, 0xaf, 0xb5, 0xe1, 0x9f, 0xd9, 0xce, 0x2a, 0x6e, 0xd3, 0xb4,
	0x31, 0xcd, 0xfa, 0x22, 0xff, 0xca, 0x36, 0xab, 0xad, 0xc4, 0x20, 0x1b, 0x18, 0xc4, 0x6b, 0x0e,
	0x72, 0x62, 0x20, 0xa3, 0x0c, 0x0b, 0x15, 0x3f, 0x62, 0xcc, 0x2e, 0x31, 0x7a, 0x3c, 0x42, 0x8f,
	0x7b, 0x76, 0x68, 0x84, 0x5c, 0x72, 0xb9, 0xa3, 0xe4, 0xa7, 0x6c, 0xab, 0xde, 0x7b, 0x74, 0x72,
	0xd0, 0x69, 0xb7, 0xd9, 0xe9, 0x80, 0xd8, 0xe4, 0xb5, 0xa4, 0xde, 0x3f, 0xba, 0x99, 0x79, 0xce,
	0xed, 0xcc, 0x73, 0xfe, 0xcd, 0x3c, 0xe7, 0xf7, 0xdc, 0x6b, 0xdd, 0xce, 0xbd, 0xd6, 0x9f, 0xb9,
	0xd7, 0xfa, 0xfe, 0x3e, 0x15, 0x66, 0x52, 0x8e, 0x83, 0x44, 0x65, 0xa1, 0xf5, 0xfe, 0x50, 0x99,
	0x87, 0xf4, 0xc8, 0xae, 0xeb, 0x83, 0x99, 0x6a, 0x28, 0xc6, 0x1d, 0x7c, 0x57, 0x9f, 0xfe, 0x07,
	0x00, 0x00, 0xff, 0xff, 0x05, 0xc4, 0xe5, 0xb5, 0x2a, 0x04, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EntityCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.EntityCount))
		i--
		dAtA[i] = 0x58
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x52
	if m.GoogleIAPOrderCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.GoogleIAPOrderCount))
		i--
		dAtA[i] = 0x48
	}
	if len(m.GoogleInAppPurchaseOrderList) > 0 {
		for iNdEx := len(m.GoogleInAppPurchaseOrderList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GoogleInAppPurchaseOrderList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.ExecutionList) > 0 {
		for iNdEx := len(m.ExecutionList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExecutionList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.ExecutionCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.ExecutionCount))
		i--
		dAtA[i] = 0x30
	}
	if len(m.PendingExecutionList) > 0 {
		for iNdEx := len(m.PendingExecutionList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PendingExecutionList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.PendingExecutionCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.PendingExecutionCount))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ItemList) > 0 {
		for iNdEx := len(m.ItemList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ItemList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.RecipeList) > 0 {
		for iNdEx := len(m.RecipeList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RecipeList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CookbookList) > 0 {
		for iNdEx := len(m.CookbookList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CookbookList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CookbookList) > 0 {
		for _, e := range m.CookbookList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.RecipeList) > 0 {
		for _, e := range m.RecipeList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.ItemList) > 0 {
		for _, e := range m.ItemList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.PendingExecutionCount != 0 {
		n += 1 + sovGenesis(uint64(m.PendingExecutionCount))
	}
	if len(m.PendingExecutionList) > 0 {
		for _, e := range m.PendingExecutionList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.ExecutionCount != 0 {
		n += 1 + sovGenesis(uint64(m.ExecutionCount))
	}
	if len(m.ExecutionList) > 0 {
		for _, e := range m.ExecutionList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.GoogleInAppPurchaseOrderList) > 0 {
		for _, e := range m.GoogleInAppPurchaseOrderList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.GoogleIAPOrderCount != 0 {
		n += 1 + sovGenesis(uint64(m.GoogleIAPOrderCount))
	}
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if m.EntityCount != 0 {
		n += 1 + sovGenesis(uint64(m.EntityCount))
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CookbookList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CookbookList = append(m.CookbookList, Cookbook{})
			if err := m.CookbookList[len(m.CookbookList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecipeList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecipeList = append(m.RecipeList, Recipe{})
			if err := m.RecipeList[len(m.RecipeList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemList = append(m.ItemList, Item{})
			if err := m.ItemList[len(m.ItemList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingExecutionCount", wireType)
			}
			m.PendingExecutionCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PendingExecutionCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingExecutionList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PendingExecutionList = append(m.PendingExecutionList, Execution{})
			if err := m.PendingExecutionList[len(m.PendingExecutionList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecutionCount", wireType)
			}
			m.ExecutionCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExecutionCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecutionList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecutionList = append(m.ExecutionList, Execution{})
			if err := m.ExecutionList[len(m.ExecutionList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoogleInAppPurchaseOrderList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoogleInAppPurchaseOrderList = append(m.GoogleInAppPurchaseOrderList, GoogleInAppPurchaseOrder{})
			if err := m.GoogleInAppPurchaseOrderList[len(m.GoogleInAppPurchaseOrderList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoogleIAPOrderCount", wireType)
			}
			m.GoogleIAPOrderCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GoogleIAPOrderCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityCount", wireType)
			}
			m.EntityCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntityCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
